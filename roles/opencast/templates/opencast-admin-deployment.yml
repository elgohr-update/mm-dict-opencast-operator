#jinja2: lstrip_blocks: "True", trim_blocks: "True"
---
apiVersion: v1
kind: Deployment
metadata:
  name: '{{ meta.name }}-opencast-admin'
  namespace: '{{ meta.namespace }}'
  labels:
    app: opencast
    type: admin
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      type: admin
      app: opencast
  template:
    metadata:
      labels:
        app: opencast
        type: admin
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: opencast
      containers:
        - name: opencast-admin
          image: '{{ opencast_admin.image }}'
          imagePullPolicy: Always
          {% if runasuser is defined %}
          securityContext:
            runAsUser: {{ runasuser }}
          {% endif %}
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_MIN_MEM
              value: "{{ opencast_admin.java.min_mem}}"
            - name: JAVA_MAX_MEM
              value: "{{ opencast_admin.java.max_mem}}"
            - name: OPENCAST_DISABLE_CONFIG
              value: "true"
            {% if newrelic is defined %}
            - name: JAVA_OPTS
              value: -javaagent:/opt/newrelic/newrelic.jar
            {% endif %}
          volumeMounts:
            - name: opencast-persistent-storage
              mountPath: /data/opencast
              {% if storage.subpath is defined %}
              subPath: {{ storage.subpath }}
              {% endif %}
            - name: opencast-admin-config
              mountPath: /opencast/etc/custom.properties
              subPath: custom.properties
            - name: opencast-admin-config
              mountPath: /opencast/bin/setenv
              subPath: setenv
            - name: opencast-config
              mountPath: /opencast/etc/ui-config/mh_default_org/paella/config.json
              subPath: paella-config.json
            - name: opencast-config
              mountPath: /opencast/etc/ui-config/mh_default_org/ltitools/lti.css
              subPath: lti.css
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.organization-mh_default_org.cfg
              subPath: org.opencastproject.organization-mh_default_org.cfg
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.distribution.streaming.wowza.WowzaAdaptiveStreamingDistributionService.cfg
              subPath: org.opencastproject.distribution.streaming.wowza.WowzaAdaptiveStreamingDistributionService.cfg
            {% if opencast.workflowdir.shared is defined %}
            - name: opencast-workflow-dir
              mountPath: /opencast/etc/workflows
            {% else %}
            - name: opencast-config
              mountPath: /opencast/etc/workflows/ugent-schedule-and-upload.xml
              subPath: ugent-schedule-and-upload.xml
            - name: opencast-config
              mountPath: /opencast/etc/workflows/ugent-partial-publish.xml
              subPath: ugent-partial-publish.xml
            - name: opencast-config
              mountPath: /opencast/etc/workflows/ugent-partial-ingest.xml
              subPath: ugent-partial-ingest.xml
            - name: opencast-config
              mountPath: /opencast/etc/workflows/ugent-import.xml
              subPath: ugent-import.xml
            - name: opencast-config
              mountPath: /opencast/etc/workflows/prepare-videoeditor.xml
              subPath: prepare-videoeditor.xml
            {% endif %}
            - name: opencast-config
              mountPath: /opencast/etc/org.ops4j.pax.logging.cfg
              subPath: org.ops4j.pax.logging.cfg
            - name: opencast-admin-data
              mountPath: /opencast/data
            {% if opencast.lti is defined %}
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg
              subPath: org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.kernel.security.OAuthConsumerDetailsService.cfg
              subPath: org.opencastproject.kernel.security.OAuthConsumerDetailsService.cfg
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.lti.service.impl.LtiServiceImpl.cfg
              subPath: org.opencastproject.lti.service.impl.LtiServiceImpl.cfg
            {% endif %}
            {% if opencast_admin.cas_filter is defined %}
            - name: opencast-admin-config
              mountPath: /opencast/etc/security/mh_default_org.xml
              subPath: mh_default_org.xml
            - name: opencast-admin-config
              mountPath: /opencast/etc/org.apache.karaf.features.cfg
              subPath: org.apache.karaf.features.cfg
            {% endif %}
            {% if opencast.userdirectory.ldap is defined %}
            - name: opencast-config
              mountPath: /opencast/etc/org.opencastproject.userdirectory.ldap-{{ opencast.userdirectory.ldap.id }}.cfg
              subPath: org.opencastproject.userdirectory.ldap-{{ opencast.userdirectory.ldap.id }}.cfg
            {% endif %}
            {% if extra_ldap is defined %}
            - name: {{ extra_ldap.name }}
              mountPath: {{ extra_ldap.configmap.mountpath }}
              subPath: {{ extra_ldap.configmap.subpath }}
            {% endif %}
            {% if newrelic is defined %}
            - name: newrelic
              mountPath: /opt/newrelic
            - name: newrelic-config
              mountPath: /opt/newrelic/newrelic.yml
              subPath: newrelic.yml
            {% endif %}
          resources:
            {% if opencast_admin.resources.requests is defined %}
            requests:
              memory: "{{ opencast_admin.resources.requests.memory }}"
              cpu: "{{ opencast_admin.resources.requests.cpu }}"
            {% endif %}
            {% if opencast_admin.resources.limits is defined %}
            limits:
              memory: "{{ opencast_admin.resources.limits.memory }}"
              cpu: "{{ opencast_admin.resources.limits.cpu }}"
            {% endif %}
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            httpGet:
              path: /info/me.json
              port: 8080
              scheme: HTTP
              httpHeaders:
              - name: Host
                value: localhost
      initContainers:
      {% if newrelic is defined %}
      - name: install-newrelic
        image: quay.io/mm-dict/alpine:latest
        command:
        - /usr/bin/wget
        args:
        - -P
        - /opt/newrelic
        - https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic.jar
        volumeMounts:
        - mountPath: /opt/newrelic
          name: newrelic
      {% endif %}
      volumes:
        - name: opencast-config
          configMap:
            name: {{ meta.name }}-opencast-config
        - name: opencast-admin-config
          configMap:
            name: {{ meta.name }}-opencast-admin-config
        {% if createpv is defined %}
        - name: opencast-persistent-storage
          persistentVolumeClaim:
            claimName: opencast-data
        {% else %}
        - name: opencast-persistent-storage
          persistentVolumeClaim:
            claimName: {{ storage.claimname }}
        {% endif %}
        {% if extra_ldap is defined %}
        - name: {{ extra_ldap.name }}
          configMap:
            name: {{ extra_ldap.name }}
        {% endif %}
        - name: opencast-admin-data
          emptyDir: {}
        {% if newrelic is defined %}
        - name: newrelic
          emptyDir: {}
        - name: newrelic-config
          configMap:
            name: {{ meta.name }}-newrelic-config
        {% endif %}
        {% if opencast.workflowdir.shared is defined %}
        - name: opencast-workflow-dir
          persistentVolumeClaim:
            claimName: {{ meta.name }}-opencast-workflow-dir
        {% endif %}
