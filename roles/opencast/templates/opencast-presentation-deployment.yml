#jinja2: lstrip_blocks: "True", trim_blocks: "True"
---
apiVersion: v1
kind: Deployment
metadata:
  name: '{{ meta.name }}-opencast-presentation'
  namespace: '{{ meta.namespace }}'
  labels:
    app: opencast
    type: presentation
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      type: presentation
      app: opencast
  template:
    metadata:
      labels:
        app: opencast
        type: presentation
    spec:
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      serviceAccountName: opencast
      containers:
        - name: opencast-presentation
          image: '{{ opencast_presentation.image }}'
          imagePullPolicy: Always
          {% if runasuser is defined %}
          securityContext:
            runAsUser: {{ runasuser }}
          {% endif %}
          ports:
            - containerPort: 8080
          env:
            - name: JAVA_MIN_MEM
              value: "{{ opencast_presentation.java.min_mem}}"
            - name: JAVA_MAX_MEM
              value: "{{ opencast_presentation.java.max_mem}}"
            - name: ORG_OPENCASTPROJECT_DB_VENDOR
              value: "MariaDB"
            - name: ORG_OPENCASTPROJECT_SERVER_URL
              value: ""
            - name: ORG_OPENCASTPROJECT_SECURITY_ADMIN_USER
              value: "admin"
            - name: ORG_OPENCASTPROJECT_SECURITY_ADMIN_PASS
              valueFrom:
                secretKeyRef:
                  name: '{{ meta.name }}-opencast'
                  key: admin-pass
            - name: ORG_OPENCASTPROJECT_SECURITY_DIGEST_USER
              value: "opencast_system_account"
            - name: ORG_OPENCASTPROJECT_SECURITY_DIGEST_PASS
              valueFrom:
                secretKeyRef:
                  name: '{{ meta.name }}-opencast'
                  key: digest-pass
            - name: ORG_OPENCASTPROJECT_DB_JDBC_URL
              value: "{{ opencast.database.url }}"
            - name: ORG_OPENCASTPROJECT_DB_JDBC_USER
              value: "{{ opencast.database.user }}"
            - name: ORG_OPENCASTPROJECT_DB_JDBC_DRIVER
              value: "org.mariadb.jdbc.Driver"
            - name: ORG_OPENCASTPROJECT_DB_JDBC_PASS
              valueFrom:
                secretKeyRef:
                  name: '{{ meta.name }}-opencast-database'
                  key: database-password
            - name: ORG_OPENCASTPROJECT_STREAMING_URL
              value: {{ opencast.streaming.url }}
            - name: ORG_OPENCASTPROJECT_ADAPTIVE_STREAMING_URL
              value: {{ opencast.adaptive_streaming.url }}
            - name: ACTIVEMQ_BROKER_URL
              value: "{{ opencast.activemq.url }}"
            - name: ACTIVEMQ_BROKER_USERNAME
              value: "{{ opencast.activemq.user}}"
            - name: ACTIVEMQ_BROKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{ meta.name }}-opencast-activemq'
                  key: activemq-password
            - name: PROP_ORG_OPENCASTPROJECT_PLAYER
              value: "{{ opencast.player | default('/paella/ui/watch.html?id=#{id}') }}"
            - name: PROP_ORG_OPENCASTPROJECT_ADMIN_UI_URL
              value: "{{ opencast.admin.ui.url }}"
            - name: PROP_ORG_OPENCASTPROJECT_ENGAGE_UI_URL
              value: "{{ opencast.engage.ui.url }}"
            - name: ELASTICSEARCH_SERVER_ADDRESS
              value: "{{ opencast.elasticsearch.address }}"
            - name: ELASTICSEARCH_SERVER_PORT
              value: "9200"
            - name: OPENCAST_CUSTOM_CONFIG
              value: "/opencast-custom"
            {% if newrelic is defined %}
            - name: JAVA_OPTS
              value: -javaagent:/opt/newrelic/newrelic.jar
            {% endif %}
          volumeMounts:
            - name: opencast-persistent-storage
              mountPath: /data/opencast
              {% if storage.subpath is defined %}
              subPath: {{ storage.subpath }}
              {% endif %}
            - name: opencast-config
              mountPath: /opencast-custom
              subPath: presentation
            - name: opencast-presentation-config
              mountPath: /opencast/bin/setenv
              subPath: setenv
            {% if newrelic is defined %}
            - name: newrelic
              mountPath: /opt/newrelic
            - name: newrelic-config
              mountPath: /opt/newrelic/newrelic.yml
              subPath: newrelic.yml
            {% endif %}
          resources:
            {% if opencast_presentation.resources.requests is defined %}
            requests:
              memory: "{{ opencast_presentation.resources.requests.memory }}"
              cpu: "{{ opencast_presentation.resources.requests.cpu }}"
            {% endif %}
            {% if opencast_presentation.resources.limits is defined %}
            limits:
              memory: "{{ opencast_presentation.resources.limits.memory }}"
              cpu: "{{ opencast_presentation.resources.limits.cpu }}"
            {% endif %}
          readinessProbe:
            initialDelaySeconds: 60
            periodSeconds: 120
            httpGet:
              path: /info/me.json
              port: 8080
              scheme: HTTP
              httpHeaders:
              - name: Host
                value: localhost
          livenessProbe:
            initialDelaySeconds: 240
            periodSeconds: 60
            httpGet:
              path: /info/me.json
              port: 8080
              scheme: HTTP
              httpHeaders:
              - name: Host
                value: localhost
      initContainers:
      {% if newrelic is defined %}
      - name: install-newrelic
        image: quay.io/mm-dict/alpine:latest
        command:
        - /usr/bin/wget
        args:
        - -P
        - /opt/newrelic
        - https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic.jar
        volumeMounts:
        - mountPath: /opt/newrelic
          name: newrelic
      {% endif %}
      volumes:
        - name: opencast-config
          persistentVolumeClaim:
            claimName: {{ meta.name }}-opencast-config
        - name: opencast-presentation-config
          configMap:
            name: {{ meta.name }}-opencast-presentation-config
        {% if createpv is defined %}
        - name: opencast-persistent-storage
          persistentVolumeClaim:
            claimName: opencast-data
        {% else %}
        - name: opencast-persistent-storage
          persistentVolumeClaim:
            claimName: {{ storage.claimname }}
        {% endif %}
        {% if newrelic is defined %}
        - name: newrelic
          emptyDir: {}
        - name: newrelic-config
          configMap:
            name: {{ meta.name }}-newrelic-config
        {% endif %}

