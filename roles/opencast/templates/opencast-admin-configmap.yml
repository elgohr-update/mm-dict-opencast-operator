---
kind: ConfigMap
apiVersion: v1
metadata:
  name: '{{ meta.name }}-opencast-admin-config'
  namespace: '{{ meta.namespace }}'
data:
  custom.properties: |
    #########################################
    ### Opencast configuration properties ###
    #########################################

    # The internal URL of this Opencast installation, used to locate services running on this instance and for inter-node
    # communication in distributed setups.
    #
    # Note that while the server.url is the public url of this instance, there is the actual public url of an individual
    # tenant, which is configured in etc/load/org.opencastproject.organization-<tenant id>.cfg with the default tenant id
    # being "mh_default_org".
    #
    # Also note that if this felix installation is proxied behind an Apache HTTPD reverse proxy, and communication is meant
    # to go through that proxy, then server.url should point to the proxy's port (usually 80).
    # Related options (like listening addresses) are located in etc/org.ops4j.pax.web.cfg
    org.opencastproject.server.url={{ SERVER_URL }}

    # The environment specified below will show up in the email subject when sending a notification about transcription
    # errors. Useful to differentiate among environments (dev, test, etc) and may be used by other services in the future.
    #org.opencastproject.environment.name=


    # The node name is a descriptive title for this Opencast instance, eg admin, worker01, etc. This is a useful alternative
    # to the using the server url in the Admin UI on cloud platforms where nodes may be dynamically generated and not have a
    # sensible hostname.
    org.opencastproject.server.nodename={{ TYPE }}

    ######### USER/AUTHENTICATION #########

    # The username and password for a system administrator account. If both `user` and `pass` are set, Opencast will create
    # or update that user when started up. If it is commented out, nothing will happen.
    # WARNING: Commenting this out later or renaming the user will *not* remove already created user.
    org.opencastproject.security.admin.user={{ opencast.admin.user | default('admin', true) }}
    org.opencastproject.security.admin.pass={{ opencast.admin.pass }}
    org.opencastproject.security.admin.roles=ROLE_ADMIN,ROLE_OAUTH_USER

    # Email address of the server's admin.
    org.opencastproject.admin.email={{ opencast.admin.email | default('admin@localhost') }}

    # Optional custom roles which can used in ACLs and granted to users or groups (comma-separated list of role names)
    #org.opencastproject.security.custom.roles=ROLE_ONE, ROLE_TWO, ROLE_THREE

    # Optional custom roles pattern (regular expression). Roles matching this pattern can be added to ACLs.
    #org.opencastproject.security.custom.roles.pattern=^[0-9a-f-]+_(Learner|Instructor)$

    # The username and password to present to other Opencast servers when calling their REST endpoints.  The remote server
    # must contain matching values.
    org.opencastproject.security.digest.user={{ opencast.digest.user | default('opencast_system_account') }}
    org.opencastproject.security.digest.pass={{ opencast.digest.pass }}

    # The number of times to retry a request if the nonce expires.
    #org.opencastproject.security.digest.nonce.retries=12

    # The configuration property specifying the minimum amount of time in seconds wait before retrying a request after
    # a nonce timeout. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.base.time=300

    # The maximum amount of time to wait in addition to the base time for a random generator to add after a nonce timeout
    # so that requests that timeout won't all try again at exactly the same time. Default is 300 seconds (5 minutes).
    #org.opencastproject.security.digest.nonce.variable.time=300


    ######### STORAGE #########

    # The directory where the system will store its processed files (including temporary files).  This directory should
    # be persistent between reboots (i.e., not /tmp)
    org.opencastproject.storage.dir=/data/opencast

    # The path to the asset manager directory
    # Default: ${org.opencastproject.storage.dir}/archive
    #org.opencastproject.episode.rootdir=${org.opencastproject.storage.dir}/archive

    # The path to the repository of files used during media processing.
    #org.opencastproject.file.repo.path=${org.opencastproject.storage.dir}/files

    # The path to the working files (recommend using fast, transient storage)
    org.opencastproject.workspace.rootdir=${org.opencastproject.storage.dir}/workspace

    # The location to store uploaded static files such as images and videos.
    org.opencastproject.staticfiles.rootdir=${org.opencastproject.storage.dir}/staticfiles

    # Location of the temporary directory to build zip archives.
    # Default: ${org.opencastproject.storage.dir}/tmp/zip
    #org.opencastproject.workflow.handler.workflow.ZipWorkflowOperationHandler.tmpdir=${org.opencastproject.storage.dir}/tmp/zip


    ######### STREAMING AND DOWNLOAD #########

    # The base URL of the streaming server (ususally "rtmp://<SERVER_URL>/matterhorn-engage").
    # ${org.opencastproject.server.url} can not be used, because the streaming server does not use the HTTP protocol.
    # Streaming is not included in the default workflow, since the Red5 streaming server is a 3rd party component that
    # requires separate installation.
    {% if opencast.streaming.url is defined %}
    org.opencastproject.streaming.url={{ opencast.streaming.url }}
    org.opencastproject.streaming.port={{ opencast.streaming.port | default('1935') }}
    {% endif %}

    # The directory where Opencast stores the streams
    #org.opencastproject.streaming.directory=${org.opencastproject.storage.dir}/streams

    # The port to use for the streaming server, only used by a Wowza streaming server.
    #org.opencastproject.streaming.port=1935

    {% if opencast.adaptive_streaming.url is defined %}
    org.opencastproject.adaptive-streaming.url={{ opencast.adaptive_streaming.url }}
    org.opencastproject.adaptive-streaming.port={{ opencast.adaptive_streaming.port | default('1935') }}
    {% endif %}

    # Server URL for Adaptive Streaming, usually the same server like RTMP streaming with a different protocol
    #org.opencastproject.adaptive-streaming.url=http(s)://<wowza-server>/<wowza-application>

    # Port for Adaptive Streaming (for Wowza usually 1935)
    #org.opencastproject.adaptive-streaming.port=<port_number>

    # Some newer streaming server versions expect an "flv:" tag within the rtmp URL.
    # Not every RTMP-streaming server is compatible with this (i.e. nginx), so this
    # is the compatibility mode to the old syntax.
    # true  = without "flv:" tag - old syntax
    # false = with    "flv:" tag - new syntax
    #org.opencastproject.streaming.flvcompatibility=true

    # The base URL for media downloads.
    org.opencastproject.download.url={{ opencast.download.url | default('${org.opencastproject.server.url}/static') }}

    # The directory to store media, metadata, and attachments for download from the engage tool
    org.opencastproject.download.directory=${org.opencastproject.storage.dir}/downloads

    # The mime types of streaming formats for which raw streaming URLs will be published automatically under the channel:
    # 'engage-player'. Use the character: '*' if all configured streaming URLs should be published.
    # The publication of streaming URI's is switched off by default
    # org.opencastproject.publish.streaming.formats=

    ######### DATABASE #########

    # Relational Database configuration.  By default, Opencast uses an embedded H2 database.  A standalone database server
    # is recommended for production systems.  If you run the ddl script for your db vendor (see docs/scripts/ddl/) manually,
    # (this is recommended) set 'ddl-generation' to 'false'.
    org.opencastproject.db.ddl.generation=false

    # db.vendor can be any of the values listed at under the "eclipselink.target-database" section of
    # http://www.eclipse.org/eclipselink/documentation/2.4/jpa/extensions/p_target_database.htm#target-database
    # Common values include MySQL, PostgreSQL.
    org.opencastproject.db.vendor=MySQL

    # Opencast comes with the jdbc drivers for MySQL (com.mysql.jdbc.Driver) and PostgreSQL (org.postgresql.Driver). To add
    # other jdbcDrivers to the Opencast runtime, rebuild the db module with your desired drivers.
    org.opencastproject.db.jdbc.driver=org.mariadb.jdbc.Driver

    # The jdbc connection url, username, and password
    org.opencastproject.db.jdbc.url={{ opencast.database.url }}
    org.opencastproject.db.jdbc.user={{ opencast.database.user }}
    org.opencastproject.db.jdbc.pass={{ opencast.database.pass }}

    # The jdbc connection pool properties. See http://www.mchange.com/projects/c3p0/#basic_pool_configuration
    # max.idle.time should be lower than the database server idle connection timeout duration (wait_timeout for mysql)
    #org.opencastproject.db.jdbc.pool.max.size=15
    #org.opencastproject.db.jdbc.pool.min.size=3
    #org.opencastproject.db.jdbc.pool.acquire.increment=3
    #org.opencastproject.db.jdbc.pool.max.statements=0
    #org.opencastproject.db.jdbc.pool.login.timeout=1000
    org.opencastproject.db.jdbc.pool.max.idle.time=460
    #org.opencastproject.db.jdbc.pool.max.connection.age=0


    ######### Workspace Cleanup #########

    # The scheduled period in seconds, at which a workspace cleanup operation is performed.
    # 86400 seconds equals 24 hours.
    # Default value: -1 (Disable cleanup scheduler)
    org.opencastproject.workspace.cleanup.period=86400

    # The maximum age a file must reach in seconds before a deletion of the file in the workspace cleanup operation is
    # performed. 2592000 seconds equals 30 days.
    # Default value: -1 (max age will never be reached)
    org.opencastproject.workspace.cleanup.max.age=2592000


    ######### ACTIVE MQ BROKER #########

    # This configures the connection to the Active MQ broker so that we can send and receive messages.
    # There are many settings for specifying the broker url: http://activemq.apache.org/activemq-4-connection-uris.html
    # Including with failover support details here: http://activemq.apache.org/failover-transport-reference.html
    # Default (url): failover://(tcp://127.0.0.1:61616)?initialReconnectDelay=2000&maxReconnectDelay=60000
    # Default (username/password): None
    activemq.broker.url={{ opencast.activemq.url }}
    activemq.broker.username={{ opencast.activemq.user }}
    activemq.broker.password={{ opencast.activemq.pass }}

    ######### Elasticsearch #########

    # The address of an external Elasticsearch node for Opencast to use.
    # If this is undefined, Opencast will launch an internal Elasticsearch node.
    # Default: undefined
    {% if opencast.elasticsearch is defined %}
    org.opencastproject.elasticsearch.server.hostname={{ opencast.elasticsearch.address }}
    org.opencastproject.elasticsearch.server.port={{ opencast.elasticsearch.port }}
    {% endif %}
    #org.opencastproject.elasticsearch.server.address=127.0.0.1

    # The port of the external Elasticsearch node if defined.
    # Default: 9300
    #org.opencastproject.elasticsearch.server.port=9300


    ######### SOLR #########

    # Default directory to use for embedded solr indexes.
    # If not set, ${karaf.data}/solr-indexes will be used.
    org.opencastproject.solr.dir=/data/solr-indexes

    # Directory to store the embedded solr indices.  This should be a persistent and stable directory.
    # Default: ${org.opencastproject.solr.dir}/{search, series, workflow}
    #org.opencastproject.search.solr.dir=${org.opencastproject.solr.dir}/search
    #org.opencastproject.series.solr.dir=${org.opencastproject.solr.dir}/series
    #org.opencastproject.workflow.solr.dir=${org.opencastproject.solr.dir}/workflow

    # URLs of dedicated Solr server to use.  Note that if thesw URLs are specified, the local embedded Solr index as
    # configured using `org.opencastproject.*.solr.dir` will be ignored. A dedicated Solr server should be set up in order
    # to enable running multiple instances of the related service. Please consult http://lucene.apache.org/solr/ on how to
    # set up a standalone Solr server.
    #org.opencastproject.search.solr.url=http://localhost:8983/solr/
    #org.opencastproject.series.solr.url=http://localhost:8983/solr/
    #org.opencastproject.workflow.solr.url=http://localhost:8983/solr/

    {% if opencast.solr_search is defined %}
    org.opencastproject.search.solr.url={{ opencast.solr_search.url }}
    {% endif %}
    {% if opencast.solr_series is defined %}
    org.opencastproject.series.solr.url={{ opencast.solr_series.url }}
    {% endif %}
    {% if opencast.solr_workflow is defined %}
    org.opencastproject.workflow.solr.url={{ opencast.solr_workflow.url }}
    {% endif %}


    ######### Service Registry & Jobs #########

    # The url of the remote service registry.  This is used in cases where there is no direct connection to the service
    # registry database such as capture agens running in protected environments. This is typically true for capture agents
    # and should be set to the url of a server running the actual implementation of the service registry and the path to
    # the service registry(admin, worker, etc. See the build profiles in pom.xml for a complete list).
    #org.opencastproject.serviceregistry.url=${org.opencastproject.server.url}/services

    # The base URL to use for publishing job locations. If left commented out, the local server URL will be used.  Set this
    # if you intend to support swapping servers with different IPs or host names.
    #org.opencastproject.jobs.url=${org.opencastproject.server.url}

    # Whether to accept a job whose load exceeds the host's max load
    # Default: true
    #org.opencastproject.job.load.acceptexceeding=true

    ######### Capture and Ingest #########

    # Timeout for capture agent status, in minutes.
    # Capture agents which have not sent status updates for this period will be marked as offline.
    # Default: 120 minutes (2 hours)
    #org.opencastproject.capture.admin.timeout=120

    # The ID of the default workflow definition to run when media are ingested
    #org.opencastproject.workflow.default.definition=schedule-and-upload

    # The max number of ingests to allow at the same time. If more ingests try than the max they will receive service
    # unavailable. A value of 0 means that the server will accept all ingests.
    # Default: 0
    #org.opencastproject.ingest.max.concurrent=0

    ######### Third-party Binaries #########

    # Path to the ffmpeg binary. Its name is sufficient if the binary is in the
    # system path (default: ffmpeg)
    #org.opencastproject.composer.ffmpeg.path=/opt/ffmpeg/ffmpeg

    # Path to the ffprobe binary. Its name is sufficient if the binary is in the
    # system path (default: ffprobe)
    #org.opencastproject.inspection.ffprobe.path=/opt/ffmpeg/ffprobe

    # Path to the tesseract binary used by the text analyzer. Its name is
    # sufficient if the binary is in the system path (default: tesseract)
    #org.opencastproject.textanalyzer.tesseract.path=/opt/tesseract/tesseract

    # Additional options for Tesseract like language or page segmentation mode.
    # The default are no additional options.
    #org.opencastproject.textanalyzer.tesseract.options=-l eng --psm 3

    # Path to the hunspell binary used by the dictionary-hunspell
    # module. The default ist just "hunspell" which requires hunspell to be in the
    # search path.
    #org.opencastproject.dictionary.hunspell.binary=/opt/hunspell/hunspell

    # Command to use for filtering text by the dictionary-hunspell
    # module. The command is appended to the hunspell binary path. It should filter
    # the text from stdin and print the recognized words to stdout. Usually this
    # should be a combination of "-G" and a list of dictionaries. The default is to
    # use "-d de_DE,en_GB,en_US -G".
    #org.opencastproject.dictionary.hunspell.command=-i utf-8 -d de_DE,en_GB,en_US -G

    # The path for SoX command line used by audio normalization
    #org.opencastproject.sox.path=/opt/sox/sox


    ######### Static Files #########

    # True means to use a webserver to serve the static files but this will not secure
    # any of the files using user or organization security. If false it uses
    # Opencast endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.enabled=false

    # The url to the location where the webserver serves the static file uploads from. It will add the organization and uuid
    # for the uploaded static file. If not set Opencast uses endpoints to serve and secure the files.
    #org.opencastproject.staticfiles.webserver.url=${org.opencastproject.server.url}/staticfiles/

    # This is the maximum allowable size in bytes for a file to be uploaded. If the property is missing or set to 0 it is
    # disabled.
    # Default is 1000000000 which is 1GB.
    #org.opencastproject.staticfiles.upload.max.size=1000000000


    ######### UI Configuration #########

    # Location of the folder containing user interface configuration.
    # Default: ${karaf.etc}/ui-config
    #org.opencastproject.uiconfig.folder

    ######### User Directory #########

    # The size of the user directory cache.
    # Default: 200
    #org.opencastproject.userdirectory.cache.size=200

    # The expiry time of entries in the user directory cache, in minutes
    # Default: 1 minute
    #org.opencastproject.userdirectory.cache.expiry=1


    ######### KARAF CONFIGURATION #########

    # The place for Karaf to put the lock file ensuring that Opencast is not run twice at the same time.
    karaf.lock.dir=${karaf.data}

    # Setting or deactivating the remote shutdown port in Apache Karaf. Commenting this out will make Karaf listen to a
    # random shutdown port on localhost, announcing it via ${karaf.shutdown.port.file}. Setting this to -1 will deactivate
    # the shutdown port. Note that the stop script is based on this and will not work any longer if the port is deactivated.
    #karaf.shutdown.port=-1

    # Specifies the location of the port file for Opencast. It is used by the shutdown script to send the shutdown command
    # to the main process.
    karaf.shutdown.port.file=${karaf.data}/port

    # Command for shutting down Opencast. If the shutdown port is enabled, Opencast will listen for this command to initiate
    # the shut down procedure.
    # Change this to something secret
    karaf.shutdown.command=3500d4e3-ce93-4ae3-abb4-5e90cef4deb

    # Specifies the location of the PID file for Opencast. It is used by the shutdown script to synchronously shut down
    # Opencast as it will wait for the process with the given process id. Removing this will cause the network port to be
    # used as fallback.
    karaf.pid.file=${karaf.data}/pid


    ######### Miscellaneous #########

    # Send server configuration data to the Opencast project to help us track how people are using Opencast.  No security
    # related information will be sent to the opencast project.  Comment this out to disable this feature.
    #org.opencastproject.anonymous.feedback.url=http://opencast.org/form/tracking

    # The mount point of the OAI-PMH servlet.
    # Please make sure that the path configured is accessible without any login (see security.xml)
    # This setting is configured here and not in the OAI-PMH server's config since it is shared amongst several
    # OAI-PMH related components.
    #org.opencastproject.oaipmh.mountpoint=/oaipmh

    # This changes the number of seconds from when an internal request is made until a signed URL will expire. More
    # specifically, the HTTP client needs access to internal storage areas such as the working file repository as well as to
    # distributed artifacts on the downloads and streaming servers, all of which are protected by verification components.
    # Default is 60 seconds as it shouldn't take longer than that to make a request to a server. This will have no impact on
    # a system where url signing is not configured. For more information please see:
    # http://docs.opencast.org/latest/admin/configuration/stream-security/#configuration-of-url-signing-timeout-values
    #org.opencastproject.security.internal.url.signing.duration=60
  mh_default_org.xml: |
    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/osgi
           http://www.springframework.org/schema/osgi/spring-osgi.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

      <sec:http pattern="/favicon.ico" security="none" />

      <sec:http create-session="ifRequired" servlet-api-provision="true" realm="Opencast"
        entry-point-ref="opencastEntryPoint">

        <sec:access-denied-handler error-page="/403.html"/>

        <!-- ################ -->
        <!-- # URL SECURITY # -->
        <!-- ################ -->

        <!-- Allow anonymous access to the login form -->
        <sec:intercept-url pattern="/" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/login.html" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/sysinfo/bundles/version" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Allow anonymous access to resources from runtime info ui -->
        <sec:intercept-url pattern="/img/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/js/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/docs.*" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/rest_docs.*" access="ROLE_ANONYMOUS" />

        <!-- Allow anonymous access to the player redirect -->
        <sec:intercept-url pattern="/play/*" access="ROLE_ANONYMOUS" />

        <!-- Protect admin UI facade -->
        <sec:intercept-url pattern="/workflow/definitions.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/acl/acls.json" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/acl/*" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/acl-manager/acl/*" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/agents.json" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_VIEW, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/*" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_DETAILS_CAPABILITIES_VIEW, ROLE_UI_LOCATIONS_DETAILS_CONFIGURATION_VIEW, ROLE_UI_LOCATIONS_DETAILS_GENERAL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/assets.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/attachment/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/catalog/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/media/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/publication/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/catalogAdapters" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/events.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/workflowProperties" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE, ROLE_UI_TASKS_CREATE, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/new/metadata" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/new/processing" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/attachments.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ATTACHMENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/comments" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/publications.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_PUBLICATIONS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/hasActiveTransaction" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/hasSnapshots.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/media.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/media/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/metadata.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/events/metadata.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/scheduling.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/operations.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/operations/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/errors.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/errors/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/access.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ACL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/groups/groups.json" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/job/jobs.json" method="GET" access="ROLE_ADMIN, ROLE_UI_JOBS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/series.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/new/metadata" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/new/themes" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/access.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_ACL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/*/metadata.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/server/servers.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/*/hasEvents.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/configuration.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/services/services.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVICES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tasks/processing.json" method="GET" access="ROLE_ADMIN, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/themes/themes.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/themes/*/usage.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/themes/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*/editor.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*/thumbnail.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/users/users.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/users/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/events/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/jobs/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_JOBS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/series/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/servers/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/services/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVICES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/themes/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/recordings/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/users/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/groups/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/components.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/providers.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/THEMES.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/*.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/statistics/*.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/statistics/export.csv" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/assets/assets/**" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/adopter/**" method="GET" access="ROLE_ADMIN" />

        <sec:intercept-url pattern="/admin-ng/acl/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_ACLS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/scheduling" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/stop" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/retry" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/none" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT"/>
        <sec:intercept-url pattern="/admin-ng/event/bulk/update" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_GROUPS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme" method="PUT" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/themes/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/users/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_USERS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature/*" method="PUT" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/adopter/**" method="PUT" access="ROLE_ADMIN" />

        <sec:intercept-url pattern="/services/maintenance" method="POST" access="ROLE_ADMIN, ROLE_UI_SERVERS_MAINTENANCE_EDIT" />
        <sec:intercept-url pattern="/services/sanitize" method="POST" access="ROLE_ADMIN, ROLE_UI_SERVICES_STATUS_EDIT" />
        <sec:intercept-url pattern="/staticfiles" method="POST" access="ROLE_ADMIN, ROLE_UI_THEMES_CREATE, ROLE_UI_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/acl" method="POST" access="ROLE_ADMIN, ROLE_UI_ACLS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/bulk/conflicts" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/deleteEvents" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/new" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/new/conflicts" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/scheduling.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/access" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ACL_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/assets" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/reply" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/groups" method="POST" access="ROLE_ADMIN, ROLE_UI_GROUPS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/index/*" method="POST" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/admin-ng/series/deleteSeries" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/series/new" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_CREATE" />
        <sec:intercept-url pattern="/admin-ng/series/*/access" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_ACL_EDIT" />
        <sec:intercept-url pattern="/admin-ng/statistics/data.json" method="POST" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/tasks/new" method="POST" access="ROLE_ADMIN, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/themes" method="POST" access="ROLE_ADMIN, ROLE_UI_THEMES_CREATE" />
        <sec:intercept-url pattern="/admin-ng/tools/*/editor.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_EDIT" />
        <sec:intercept-url pattern="/admin-ng/tools/*/thumbnail.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_EDIT" />
        <sec:intercept-url pattern="/admin-ng/users" method="POST" access="ROLE_ADMIN, ROLE_UI_USERS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature" method="POST" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/adopter/**" method="POST" access="ROLE_ADMIN" />

        <sec:intercept-url pattern="/admin-ng/acl/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_ACLS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_GROUPS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme" method="DELETE" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_SERIES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/themes/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_THEMES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/users/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_USERS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/adopter/**" method="DELETE" access="ROLE_ADMIN" />

        <!-- Securing the URLs for the external API interface -->
        <!-- External API GET Endpoints -->
        <sec:intercept-url pattern="/api" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/agents" method="GET" access="ROLE_ADMIN, ROLE_API_CAPTURE_AGENTS_VIEW"/>
        <sec:intercept-url pattern="/api/agents/*" method="GET" access="ROLE_ADMIN, ROLE_API_CAPTURE_AGENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/acl" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/media" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/media/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/publications" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_PUBLICATIONS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/publications/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_PUBLICATIONS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/scheduling" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_SCHEDULING_VIEW"/>
        <sec:intercept-url pattern="/api/groups" method="GET" access="ROLE_ADMIN, ROLE_API_GROUPS_VIEW"/>
        <sec:intercept-url pattern="/api/groups/*" method="GET" access="ROLE_ADMIN, ROLE_API_GROUPS_VIEW"/>
        <sec:intercept-url pattern="/api/info/*" method="GET" access="ROLE_ADMIN, ROLE_API" />
        <sec:intercept-url pattern="/api/info/me/*" method="GET" access="ROLE_ADMIN, ROLE_API" />
        <sec:intercept-url pattern="/api/info/organization/properties/engageuiurl" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EMBEDDING_CODE_VIEW" />
        <sec:intercept-url pattern="/api/series" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_VIEW"/>
        <sec:intercept-url pattern="/api/series/*" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/acl" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_ACL_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/properties" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_PROPERTIES_VIEW"/>
        <sec:intercept-url pattern="/api/statistics/providers" method="GET" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/statistics/providers/*" method="GET" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/version" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/version/*" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/workflows" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_VIEW"/>
        <sec:intercept-url pattern="/api/workflows/*" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_VIEW"/>
        <sec:intercept-url pattern="/api/workflow-definitions" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_DEFINITION_VIEW"/>
        <sec:intercept-url pattern="/api/workflow-definitions/*" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_DEFINITION_VIEW"/>
        <!-- External API PUT Endpoints -->
        <sec:intercept-url pattern="/api/events/*" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/acl" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/scheduling" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_SCHEDULING_EDIT"/>
        <sec:intercept-url pattern="/api/groups/*" method="PUT" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/series/*" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/acl" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/properties" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_PROPERTIES_EDIT"/>
        <sec:intercept-url pattern="/api/workflows/*" method="PUT" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_EDIT"/>
        <!-- External API POST Endpoints -->
        <sec:intercept-url pattern="/api/events" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_CREATE"/>
        <sec:intercept-url pattern="/api/events/*" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/acl/*" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/groups" method="POST" access="ROLE_ADMIN, ROLE_API_GROUPS_CREATE"/>
        <sec:intercept-url pattern="/api/groups/*/members/*" method="POST" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/clearIndex" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/recreateIndex" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/recreateIndex/*" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/series" method="POST" access="ROLE_ADMIN, ROLE_API_SERIES_CREATE"/>
        <sec:intercept-url pattern="/api/security/sign" method="POST" access="ROLE_ADMIN, ROLE_API_SECURITY_EDIT"/>
        <sec:intercept-url pattern="/api/statistics/data/query" method="POST" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/statistics/data/export.csv" method="POST" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/workflows" method="POST" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_CREATE"/>
        <!-- External API DELETE Endpoints -->
        <sec:intercept-url pattern="/api/events/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/acl/*/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/groups/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_GROUPS_DELETE"/>
        <sec:intercept-url pattern="/api/groups/*/members/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/series/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_DELETE"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/workflows/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_DELETE"/>

        <!-- Enable anonymous access to the admin ui -->
        <sec:intercept-url pattern="/admin-ng/fonts/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/img/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/lib/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/modules/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/public/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/scripts/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/shared/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/styles/**" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the /info/me.json resource -->
        <sec:intercept-url pattern="/info/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/i18n/languages.json" method="GET" access="ROLE_ANONYMOUS" />

        <!-- anonymous access to user interface configuration -->
        <sec:intercept-url pattern="/ui/config/**" access="ROLE_ANONYMOUS" />

        <!-- Paella player -->
        <sec:intercept-url pattern="/paella/ui/auth.html" access="ROLE_USER" />
        <sec:intercept-url pattern="/paella/ui/**" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the engage player and the GET endpoints it requires -->
        <sec:intercept-url pattern="/engage/ui/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/engage/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/engage-player/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/search/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/usertracking/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/usertracking/**" method="PUT" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/static/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/export/**" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Enable access to Opencast Studio -->
        <!-- Admins can access it, as can users with 'ROLE_STUDIO'. A few static -->
        <!-- files are also accessible to everyone: 'manifest.json' and source maps -->
        <!-- are requested without cookies by most browsers. To prevent random -->
        <!-- errors, we make those files public. They do not contain any secrets. -->
        <sec:intercept-url pattern="/studio/manifest.json" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/studio/static/js/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/studio/**" access="ROLE_ADMIN, ROLE_STUDIO" />

        <!-- Enable anonymous access to the annotation and the series endpoints -->
        <sec:intercept-url pattern="/series/**" method="GET" access="ROLE_ANONYMOUS, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/annotation/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/annotation/**" method="PUT" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the OAI-PMH repository              -->
        <!-- The OAI-PMH specification demands boths GET and POST requests  -->
        <!-- Please make sure that the path configured here matches         -->
        <!-- the path configured for the repository servlet.                -->
        <sec:intercept-url pattern="/oaipmh/**" method="GET" access="ROLE_ANONYMOUS"/>
        <sec:intercept-url pattern="/oaipmh/**" method="POST" access="ROLE_ANONYMOUS"/>

        <!-- Enable anonymous access to the rss and atom feeds -->
        <sec:intercept-url pattern="/feeds/**" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Secure the system management URLs for admins only -->
        <sec:intercept-url pattern="/services/available.*" method="GET" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/services/**" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/signing/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/system/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/config/**" access="ROLE_ADMIN" />

        <!-- Enable capture agent updates and ingest -->
        <sec:intercept-url pattern="/capture-admin/**" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/recordings/**" method="GET" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/ingest/**" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT, ROLE_STUDIO" />

        <!-- Secure the user management URLs for admins only -->
        <sec:intercept-url pattern="/users/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/admin/users.html" access="ROLE_ADMIN" />

        <!-- Enable 2-legged OAuth access ("signed fetch") to the LTI launch servlet -->
        <sec:intercept-url pattern="/lti/**" access="ROLE_OAUTH_USER" />
        <sec:intercept-url pattern="/lti/ci" access="ROLE_OAUTH_USER" />

        <!-- Enable access to the LTI tools -->
        <sec:intercept-url pattern="/ltitools/**" access="ROLE_OAUTH_USER" />

        <!-- Enable access to the LTI service -->
        <sec:intercept-url pattern="/lti-service-gui/**" access="ROLE_OAUTH_USER" />
        <sec:intercept-url pattern="/lti-service/**" access="ROLE_OAUTH_USER" />

        <sec:intercept-url pattern="/transcripts/watson/results*" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/transcripts/watson/results*" method="POST" access="ROLE_ANONYMOUS" />

        <!-- Everything else is for the admin users -->
        <sec:intercept-url pattern="/admin-ng" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN" />
        <sec:intercept-url pattern="/admin-ng/" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN" />
        <sec:intercept-url pattern="/admin-ng/index.html" access="ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN" />
        <sec:intercept-url pattern="/index.html" access="ROLE_ADMIN, ROLE_ADMIN_UI, ROLE_COURSE_ADMIN" />
        <sec:intercept-url pattern="/**" access="ROLE_ADMIN, ROLE_COURSE_ADMIN" />

        <!-- ############################# -->
        <!-- # LOGIN / LOGOUT MECHANISMS # -->
        <!-- ############################# -->

        <!-- Uncomment to enable x509 client certificates for identifying clients -->
        <!-- sec:x509 subject-principal-regex="CN=(.*?)," user-service-ref="userDetailsService" / -->

        <!-- Enable and configure the failure URL for form-based logins -->
        <!-- <sec:form-login authentication-failure-url="/admin-ng/login.html?error" authentication-success-handler-ref="authSuccessHandler" /> -->

        <!-- Authentication filter chain -->
        <!-- CAS auth is used for authentication via browsers -->
        <sec:custom-filter position="FORM_LOGIN_FILTER" ref="casFilter" />
        <sec:custom-filter position="BASIC_AUTH_FILTER" ref="authenticationFilters" />

        <sec:custom-filter ref="asyncTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
        <!-- Opencast is shipping its own implementation of the anonymous filter -->
        <sec:custom-filter ref="anonymousFilter" position="ANONYMOUS_FILTER" />

        <!-- Enables "remember me" functionality -->
        <sec:remember-me key="opencast" user-service-ref="userDetailsService" />
        <!-- Set the request cache -->
        <sec:request-cache ref="requestCache" />
        <!-- If any URLs are to be exposed to anonymous users, the "sec:anonymous" filter must be present -->
        <sec:anonymous enabled="false" />
        <!-- Enables CAS Single Sign Out -->
        <sec:logout logout-success-url="/cas-logout.jsp"/>
        <sec:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <sec:custom-filter ref="singleLogoutFilter" before="FORM_LOGIN_FILTER"/>
      </sec:http>
      <!-- ############################# -->
      <!-- # Authentication Filters    # -->
      <!-- ############################# -->
      <bean id="authenticationFilters" class="org.springframework.web.filter.CompositeFilter">
        <property name="filters">
          <list>
            <!-- Digest auth is used by capture agents and is used to enable transparent clustering of services -->
            <!-- ATTENTION! Do not deactivate the digest filter, otherwise the distributed setup would not work -->
            <ref bean="digestFilter" />
            <!-- Basic authentication  -->
            <ref bean="basicAuthenticationFilter" />
            <!-- 2-legged OAuth is used by trusted 3rd party applications, including LTI. -->
            <!-- Uncomment the line below to support LTI or other OAuth clients.          -->
            <ref bean="oauthProtectedResourceFilter" />
          </list>
        </property>
      </bean>

      <!-- ########################################### -->
      <!-- # Custom ajax timeout Filter Definition   # -->
      <!-- ########################################### -->
      <bean id="asyncTimeoutRedirectFilter" class="org.opencastproject.kernel.security.AsyncTimeoutRedirectFilter" />

      <!-- ######################################## -->
      <!-- # Custom Anonymous Filter Definition   # -->
      <!-- ######################################## -->
      <bean id="anonymousFilter" class="org.opencastproject.kernel.security.TrustedAnonymousAuthenticationFilter">
        <property name="userAttribute" ref="anonymousUserAttributes" />
        <property name="key" value="anonymousKey" />
      </bean>

      <bean id="anonymousUserAttributes" class="org.springframework.security.core.userdetails.memory.UserAttribute">
        <property name="authoritiesAsString" value="ROLE_ANONYMOUS"/>
        <property name="password" value="empty"/>
      </bean>

      <!-- ######################################## -->
      <!-- # Authentication Entry and Exit Points # -->
      <!-- ######################################## -->

      <!-- Differentiates between "normal" user requests and those requesting digest auth -->
      <bean id="opencastEntryPoint" class="org.opencastproject.kernel.security.DelegatingAuthenticationEntryPoint">
        <property name="userEntryPoint" ref="casEntryPoint" />
        <property name="digestAuthenticationEntryPoint" ref="digestEntryPoint" />
      </bean>

      <!-- Returns a 401 request for authentication via digest auth -->
      <bean id="digestEntryPoint" class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
        <property name="realmName" value="Opencast" />
        <property name="key" value="opencast" />
        <property name="nonceValiditySeconds" value="300" />
      </bean>

      <bean id="basicEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="Opencast"/>
      </bean>

      <bean id="authSuccessHandler" class="org.opencastproject.kernel.security.AuthenticationSuccessHandler">
        <property name="securityService" ref="securityService" />
        <property name="welcomePages">
          <map>
            <entry key="ROLE_ADMIN" value="/admin-ng/index.html" />
            <entry key="ROLE_ADMIN_UI" value="/admin-ng/index.html" />
            <entry key="*" value="/engage/ui/index.html" />
            <!-- Any role not listed explicitly will redirect here -->
          </map>
        </property>
      </bean>

      <!-- ################# -->
      <!-- # Digest Filter # -->
      <!-- ################# -->

      <!-- Handles the details of the digest authentication dance -->
      <bean id="digestFilter" class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
        <!--  Use only the in-memory users, as these have passwords that are not hashed -->
        <property name="userDetailsService" ref="userDetailsService" />
        <property name="authenticationEntryPoint" ref="digestEntryPoint" />
        <property name="createAuthenticatedToken" value="true" />
        <property name="userCache">
          <bean class="org.springframework.security.core.userdetails.cache.NullUserCache" />
        </property>
      </bean>

      <!-- ############################### -->
      <!-- # Basic Authentication Filter # -->
      <!-- ############################### -->

      <!-- Handles the details of the basic authentication dance -->
      <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationEntryPoint" ref="basicEntryPoint"/>
      </bean>

      <!-- ####################### -->
      <!-- # OAuth (LTI) Support # -->
      <!-- ####################### -->
      <bean name="oauthProtectedResourceFilter" class="org.opencastproject.kernel.security.LtiProcessingFilter">
        <property name="consumerDetailsService" ref="oAuthConsumerDetailsService" />
        <property name="tokenServices">
          <bean class="org.springframework.security.oauth.provider.token.InMemoryProviderTokenServices" />
        </property>
        <property name="nonceServices">
          <bean class="org.springframework.security.oauth.provider.nonce.InMemoryNonceServices" />
        </property>
        <property name="authHandler" ref="ltiLaunchAuthenticationHandler" />
      </bean>
      <!-- ############### -->
      <!-- # CAS Support # -->
      <!-- ############### -->
      <bean id="casFilter"
        class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="authSuccessHandler" />
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="authenticationDetailsSource">
          <bean class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource"/>
        </property>
      </bean>
      <bean id="casEntryPoint"
        class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="{{ opencast_admin.cas_filter.login_url }}"/>
        <property name="serviceProperties" ref="serviceProperties"/>
      </bean>
      <bean id="serviceProperties"
        class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="{{ opencast_admin.cas_filter.service }}"/>
        <property name="sendRenew" value="false"/>
      </bean>
      <bean id="casAuthenticationProvider"
        class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="authenticationUserDetailsService">
          <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
            <constructor-arg ref="userDetailsService" />
          </bean>
        </property>
        <property name="ticketValidator">
          <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
            <constructor-arg index="0" value="{{ opencast_admin.cas_filter.ticket_validator }}" />
          </bean>
        </property>
        <property name="key" value="opencastprd"/>
      </bean>
      <!-- This filter handles a Single Logout Request from the CAS Server -->
      <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
      <!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
      <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="{{ opencast_admin.cas_filter.logout_url }}"/>
        <constructor-arg>
          <bean class= "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="{{ opencast_admin.cas_filter.logout_filter_url }}"/>
      </bean>
      <!-- #################### -->
      <!-- # OSGI Integration # -->
      <!-- #################### -->
      <!-- Obtain services from the OSGI service registry -->
      <osgi:reference id="userDetailsService" cardinality="1..1"
                      interface="org.springframework.security.core.userdetails.UserDetailsService" />
      <osgi:reference id="securityService" cardinality="1..1"
                      interface="org.opencastproject.security.api.SecurityService" />
      <!-- Uncomment to enable external users e.g. used together shibboleth -->
      <!-- <osgi:reference id="userReferenceProvider" cardinality="1..1"
                      interface="org.opencastproject.userdirectory.api.UserReferenceProvider"  /> -->
      <osgi:reference id="userDirectoryService" cardinality="1..1"
                      interface="org.opencastproject.security.api.UserDirectoryService" />
      <osgi:reference id="oAuthConsumerDetailsService" cardinality="1..1"
                      interface="org.springframework.security.oauth.provider.ConsumerDetailsService" />
      <osgi:reference id="ltiLaunchAuthenticationHandler" cardinality="1..1"
                      interface="org.springframework.security.oauth.provider.OAuthAuthenticationHandler" />
      <!-- ############################# -->
      <!-- # Spring Security Internals # -->
      <!-- ############################# -->
      <bean id="passwordEncoder" class="org.opencastproject.kernel.security.CustomPasswordEncoder" />

      <!-- The JPA user directory stores md5 hashed, salted passwords, so we must use a username-salted md5 password encoder. -->
      <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="casAuthenticationProvider" />
        <sec:authentication-provider user-service-ref="userDetailsService">
          <sec:password-encoder ref="passwordEncoder">
            <!-- This salt is used only for decoding legacy MD5 hased passwords -->
            <sec:salt-source user-property="username" />
          </sec:password-encoder>
        </sec:authentication-provider>
      </sec:authentication-manager>
      <!-- Do not use a request cache -->
      <bean id="requestCache" class="org.springframework.security.web.savedrequest.NullRequestCache" />
      <!-- Uncomment to enable logging interceptors -->
      <!-- bean class="org.springframework.security.access.event.LoggerListener" / -->
      <!-- bean class="org.springframework.security.authentication.event.LoggerListener" / -->
    </beans>
  org.apache.karaf.features.cfg: |
    ################################################################################
    #
    #    Licensed to the Apache Software Foundation (ASF) under one or more
    #    contributor license agreements.  See the NOTICE file distributed with
    #    this work for additional information regarding copyright ownership.
    #    The ASF licenses this file to You under the Apache License, Version 2.0
    #    (the "License"); you may not use this file except in compliance with
    #    the License.  You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #    Unless required by applicable law or agreed to in writing, software
    #    distributed under the License is distributed on an "AS IS" BASIS,
    #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #    See the License for the specific language governing permissions and
    #    limitations under the License.
    #
    ################################################################################

    #
    # Comma separated list of features repositories to register by default
    #
    featuresRepositories = \
        mvn:org.apache.cxf.karaf/apache-cxf/3.3.3/xml/features, \
        mvn:org.apache.karaf.features/standard/4.2.9/xml/features, \
        mvn:org.apache.karaf.features/framework/4.2.9/xml/features, \
        mvn:org.apache.karaf.features/enterprise/4.2.9/xml/features, \
        mvn:org.opencastproject.assemblies/opencast-karaf-features/9.3/xml/features

    #
    # Comma separated list of features to install at startup
    #
    featuresBoot = \
        (wrap), \
        cxf-http-jetty/3.3.3, \
        package/4.2.9, \
        scr/4.2.9, \
        cxf-commands/3.3.3, \
        log/4.2.9, \
        cxf-jaxrs/3.3.3, \
        aries-blueprint/4.2.9, \
        framework/4.2.9, \
        system/4.2.9, \
        feature/4.2.9, \
        shell/4.2.9, \
        eclipselink/2.7.7, \
        service/4.2.9, \
        jndi/4.2.9, \
        http/4.2.9, \
        jpa/2.7.2, \
        deployer/4.2.9, \
        http-whiteboard/4.2.9, \
        opencast-admin/9.3.0, \
        bundle/4.2.9, \
        config/4.2.9, \
        transaction/2.0.0 \
        opencast-security-cas

    #
    # Resource repositories (OBR) that the features resolver can use
    # to resolve requirements/capabilities
    #
    # The format of the resourceRepositories is
    # resourceRepositories=[xml:url|json:url],...
    # for Instance:
    #
    #resourceRepositories=xml:http://host/path/to/index.xml
    # or
    #resourceRepositories=json:http://host/path/to/index.json
    #

    #
    # Defines if the boot features are started in asynchronous mode (in a dedicated thread)
    #
    featuresBootAsynchronous=false

    #
    # Service requirements enforcement
    #
    # By default, the feature resolver checks the service requirements/capabilities of
    # bundles for new features (xml schema >= 1.3.0) in order to automatically installs
    # the required bundles.
    # The following flag can have those values:
    #   - disable: service requirements are completely ignored
    #   - default: service requirements are ignored for old features
    #   - enforce: service requirements are always verified
    #
    #serviceRequirements=default

    #
    # Store cfg file for config element in feature
    #
    #configCfgStore=true

    #
    # Configuration of features processing mechanism (overrides, blacklisting, modification of features)
    # XML file defines instructions related to features processing
    # versions.properties may declare properties to resolve placeholders in XML file
    # both files are relative to ${karaf.etc}
    #
    #featureProcessing=org.apache.karaf.features.xml
    #featureProcessingVersions=versions.properties
  setenv: |
    # Licensed to The Apereo Foundation under one or more contributor license
    # agreements. See the NOTICE file distributed with this work for additional
    # information regarding copyright ownership.
    #
    #
    # The Apereo Foundation licenses this file to you under the Educational
    # Community License, Version 2.0 (the "License"); you may not use this file
    # except in compliance with the License. You may obtain a copy of the License
    # at:
    #
    #   http://opensource.org/licenses/ecl2.txt
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
    # WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the
    # License for the specific language governing permissions and limitations under
    # the License.


    # Possible configuration options for the start script:
    #
    # export JAVA_HOME         # Location of Java installation
    # export JAVA_MIN_MEM      # Minimum memory for the JVM
    # export JAVA_MAX_MEM      # Maximum memory for the JVM
    # export JAVA_PERM_MEM     # Minimum perm memory for the JVM
    # export JAVA_MAX_PERM_MEM # Maximum perm memory for the JVM
    # export EXTRA_JAVA_OPTS   # Additional JVM options
    # export KARAF_HOME        # Karaf home folder
    # export KARAF_DATA        # Karaf data folder
    # export KARAF_BASE        # Karaf base folder
    # export KARAF_ETC         # Karaf etc  folder
    # export KARAF_OPTS        # Additional Karaf options
    # export KARAF_DEBUG       # Enable debug mode
    # export KARAF_REDIRECT    # Enable/set the std/err redirection when using bin/start

    export EXTRA_JAVA_OPTS="-Dorg.eclipse.jetty.server.Request.maxFormContentSize=3500000 -Dfile.encoding=UTF-8"
    export JAVA_MAX_MEM={{ opencast_admin.java.max_mem}}
    export JAVA_PERM_MEM={{ opencast_admin.java.min_mem}}
    export KARAF_NOROOT=true


    . "$DIRNAME/check_ports"
