#jinja2: lstrip_blocks: "True", trim_blocks: "True"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: '{{ meta.name }}-opencast-config'
  namespace: '{{ meta.namespace }}'
data:
  {% if opencast.lti is defined %}
  org.opencastproject.lti.service.impl.LtiServiceImpl.cfg: |
    # Which workflow to use when uploading videos
    workflow={{ opencast.lti.workflow | default('fast') }}
    # Configuration for the workflow
    workflow-configuration={{ opencast.lti.workflowconfiguration | default('{"flagForCutting":"false","flagForReview":"false","publishToEngage":"true","publishToHarvesting":"true","straightToPublishing":"true"}')}}
    # After deletion, events are retracted with this workflow
    retract-workflow-id={{ opencast.lti.retractworkflow | default('retract')}}
  org.opencastproject.security.lti.LtiLaunchAuthenticationHandler.cfg: |
    # OAuth consumer keys with should be highly trusted.
    #
    # By default OAuth consumer are regarded as untrusted and a user authenticating via such
    # systems receives a rewritten username in the form of "lti:{ltiConsumerGUID}:{ltiUserID}".
    # This user is regarded as a new user temporarily existing for the duration of the session.
    # Opencast roles associated with the original user will not be attached to this user.
    #
    # Usernames of users authenticating via highly trusted systems will not be rewritten except
    # for the cases configured in the additional options below.
    #
    # Note that marking a consumer key as highly trusted can be a security risk. If the usernames of sensitive Opencast
    # users are not blacklisted, the LMS administrator could create LMS users with the same username and use LTI to grant
    # that user access to Opencast. In the default configuration, that includes the `admin` and `opencast_system_account`
    # users.
    #
    # Multiple consumer keys can be configured, by incrementing the counter. The list is read
    # sequentially incrementing the counter. If you miss any numbers it will stop looking for
    # further consumer keys.
    lti.oauth.highly_trusted_consumer_key.1={{ opencast.lti.highly_trusted_consumer_key }}

    # Allow the Opencast system administrator user to authenticate as such via LTI.
    #
    # Note that this user may still authenticate via LTI, but the username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Note that this option does not apply to custom users having the ROLE_ADMIN. Use the
    # blacklist below instead.
    #
    # Default: false
    #lti.allow_system_administrator=false

    # Allow the Opencast digest user to authenticate as such via LTI.
    #
    # Note that this user may still authenticate via LTI, but the username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Default: false
    #lti.allow_digest_user=false

    # A blacklist of users not allowed to authenticate via LTI as themselves.
    #
    # Note that these users may still authenticate via LTI, but their username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Multiple users can be configured, by incrementing the counter. The list is read sequentially
    # incrementing the counter. If you miss any numbers it will stop looking for further users.
    #
    # Default: no blacklisted users
    #lti.blacklist.user.1=

    # Determines whether a JpaUserReference should be created on LTI User Login.
    #
    # This persists the LTI Users in the database, giving them the ability to create long running tasks like ingesting a video.
    #
    # Default: false
    lti.create_jpa_user_reference=true

    # Add Custom Roles to users who has the role with custom_role_name
    # Default: empty no custom roles

    #lti.custom_role_name=Instructor
    #This Role set is an example for a user which can open the editor for an event and upload videos via opencast studio.
    #lti.custom_roles=ROLE_ADMIN_UI,ROLE_API_EVENTS_METADATA_DELETE,ROLE_API_EVENTS_METADATA_EDIT,ROLE_API_EVENTS_METADATA_VIEW,ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE,ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE,ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT,ROLE_UI_EVENTS_DETAILS_COMMENTS_REPLY,ROLE_UI_EVENTS_DETAILS_COMMENTS_RESOLVE,ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW,ROLE_UI_EVENTS_EDITOR_EDIT,ROLE_UI_EVENTS_EDITOR_VIEW,ROLE_STUDIO

    # A custom username field to use with the lti authentication.
    #
    # This can be useful with LMS's that use non-default sourcedid field.
    #
    # Default: no custom_username
    lti.custom_username=ext_d2l_orgdefinedid
  org.opencastproject.kernel.security.OAuthConsumerDetailsService.cfg: |
    # OAuth consumer consisting of name, key and secret.
    #
    # Multiple OAuth consumers can be configured, by incrementing the counter. The list is read
    # sequentially incrementing the counter. If you miss any numbers it will stop looking for
    # further consumers.
    oauth.consumer.name.1={{ opencast.oauth.consumer.name }}
    oauth.consumer.key.1={{ opencast.oauth.consumer.key }}
    oauth.consumer.secret.1={{ opencast.oauth.consumer.secret }}
  {% endif %}
  org.opencastproject.organization-mh_default_org.cfg: |
    # Organization (tenant) definition.
    #
    # With Opencast being capable of hosting multiple tenants per installation, there needs
    # to be one organization configuration per tenant.
    #
    # Therefore, in order to add another tenant to the installation, put a file named
    # org.opencastproject.organization-<tenant id>.cfg into Opencast's "load" directory.
    # Make sure to adjust at least the following fields to properly map the new tenant to the
    # installation:
    #
    #   - id
    #   - server
    #   - port
    #   - prop.org.opencastproject.admin.ui.url
    #   - prop.org.opencastproject.engage.ui.url
    #   - prop.org.opencastproject.external.api.url
    #   - prop.org.opencastproject.assetmanager.url
    #

    # Identifier of the tenant on this Opencast installation.
    #
    # The identifier is used to map data that belongs to this tenant only as well as during
    # lookup of related configuration entities such as the security settings in etc/security.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    #
    id=mh_default_org

    # Name of the organization (tenant).
    #
    # Value: <text>
    #
    name=Opencast Project

    # Server names that belong to this organization (tenant)
    #
    # Use the public domain names which are assigned to this tenant. Multiple values can be separated by comma. The final
    # set of domain names identifying this organization within Opencast will be the union of all domains defined on all
    # nodes.
    #
    # The usage of this is to map a request to a specific organization. For example, if admin-a.opencast.org is configured
    # as part of this organizations server list and an HTTP request uses this domain name, Opencast knows that the requests
    # belongs to this organization.
    #
    # If multi-tenancy is not configured (only one tenant in the system), organization mapping will automatically fall back
    # to the default organization regardless of this keys value, making it unnecessary to configure this at all.
    #
    # Important notices:
    #  - Values read from here are stored in the database (table oc_organization_node) and will not be removed if a node is
    #    removed from this list.
    #  - Do not include schema or port but use the domain name only.
    #
    # Value: <domain name 1>[,<domain name 2>,‚Ä¶]
    #
    server=localhost

    # Port for this tenant.
    #
    # When run behind a proxy server, set this to -1 since most proxies won't forward the
    # original port and set the corresponding field in the request to this value.
    #
    # Value: <integer port number>
    #
    port=-1

    # Identifier of the Administrative role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ADMIN
    #
    admin_role=ROLE_ADMIN

    # Identifier of the Anonymous role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ANONYMOUS
    #
    anonymous_role=ROLE_ANONYMOUS

    # The base URL of the file server. When using a shared filesystem between servers, set all servers to use the same URL.
    # Only then will hard linking between the working file repository and the workspace be enabled to prevent downloads.
    #
    # Value: <a complete url with scheme and port>
    # Default: the value of ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.file.repo.url=${prop.org.opencastproject.admin.ui.url}

    # Link to the Admin UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.admin.ui.url={{ opencast.admin.ui.url }}

    ###
    # OAI-PMH

    # The host URL of the OAI-PMH server. Remember to omit the mount point since it is read
    # from custom.properties -> org.opencastproject.oaipmh.mountpoint
    prop.org.opencastproject.oaipmh.server.hosturl=${prop.org.opencastproject.engage.ui.url}

    # Link to the Opencast documentation.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.documentation.url=https://docs.opencast.org

    # Link to the Opencast REST service documentation for the local system.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.restdocs.url=/rest_docs.html

    # Link to the media module
    #
    # If the property is specified, the admin ui will show a media module icon on the top-right that links
    # to the media module.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.mediamodule.url=${prop.org.opencastproject.engage.ui.url}/engage/ui

    # Link to a JIRA feedback widget collector.
    #
    # If the property is specified, the feedback button in the lower right corner will
    # link to the widget and allow to create issues right inside the project. If the
    # property is not specified, the feedback button will be hidden.
    #
    # Value: <a complete url with scheme and port>
    #
    #prop.org.opencastproject.admin.feedback.url=

    # Link to the Engage UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.engage.ui.url={{ opencast.engage.ui.url }}

    # Link to the RSS and atom feed base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.feed.url=http://localhost:8080

    # Link to the External API
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.external.api.url=http://localhost:8080

    # Link to the AssetManager base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.assetmanager.url=http://localhost:8080

    # Path to the logo that is displayed in the upper left part of the
    # media module page.
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_mediamodule=/engage/ui/img/logo/opencast-icon.svg

    # Path to the logo that is displayed in the Opencast 2.0 player
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_player=/engage/theodul/ui/img/opencast.svg

    # Set a flag to display External Roles on User modal
    #
    # Value: <boolean>
    # Default: false
    prop.adminui.user.external_role_display=false

    # Name of the list to provide a user listing as used in the group editor of the admin ui.
    #
    # Values:
    # - USERS.INVERSE will list users by name (e.g. "John Sample")
    # - USERS.INVERSE.WITH.EMAIL will list users by name and email (e.g. "John Sample <j.sample@opencast.org>")
    # - USERS.INVERSE.WITH.USERNAME will list users by name and username (e.g. "John Sample (jsample)")
    # Default: USERS.INVERSE.WITH.USERNAME
    #prop.adminui.user.listname=USERS.INVERSE.WITH.USERNAME

    {% if opencast.matomo is defined %}
    #
    # USER TRACKING IN PLAYER
    # These settings allow a tracking of user interaction with Matomo (https://matomo.org/) in the Opencast Player
    # Only if a Matomo server is provided the Matomo plugin will be activated.
    #

    # The Matomo server from which the Piwik JS library will be loaded and where the data will be reported
    prop.player.matomo.server={{ opencast.matomo.server }}

    # The Matomo site ID has to be numeric value. If not set this will be 1.
    prop.player.matomo.site_id={{ opencast.matomo.site_id }}

    # The heartbeat setting to track how long a user stayed on the player page. Set to 0 or comment this line to
    # disable the heartbeat
    prop.player.matomo.heartbeat=30

    # Notification that matomo is tracking the user, set to false to disable notifications (default true)
    prop.player.matomo.notification=true
    {% endif %}

    # This setting lets you track several player events. Add the events that you want to track to the list. Comment this
    # line to prevent event tracking
    # Events that can be tracked:
    # - play: play has been pressed (will also be called if after seeking).
    # - pause: pause has been pressend (will also be called if before seeking).
    # - seek: user jumps to a different time. Time in seconds will be stored
    # - ended: video has reached the end
    # - playbackrate: user changes the playback speed (values 0.75 to 3.00)
    # - volume: Volume change by the user value 0.0 to 1.0
    # - quality: manual change of video quality (quality tag is stored)
    # - fullscreen: user presses fullscreen button
    # - focus: user selects one video to be enlarged (flavor of selected video is stored)
    # - layout_reset: user switches back to default layout
    # - zoom: user changes the zoom of the video
    prop.player.matomo.track_events=play, pause, seek, ended, playbackrate, volume, quality, fullscreen, focus, layout_reset, zoom

    # Path to the default video player used by the engage interfaces and the LTI tools. Parameters for selecting the
    # specific videos will be appended automatically.  Common values include:
    #
    # - theodul player: /engage/theodul/ui/core.html?id=#{id}
    # - paella  player: /paella/ui/watch.html?id=#{id}
    #
    # Default: /engage/theodul/ui/core.html?id=#{id}
    prop.player={{ opencast.player | default('/paella/ui/watch.html?id=#{id}') }}

    # The default flavor of the master video (the video on the "left side" in the video display)
    prop.player.mastervideotype=presenter/delivery

    # Play only videos that are tagged with one of these tags
    # default: don't filter for tags at all
    prop.player.allowedtags=engage-streaming

    # Play only videos that use these video/streaming formats.
    # The format setting in the browser will be done for what is left after these have been filtered
    # with this setting.
    # default: don't filter for video/streaming formats at all
    # allowed values: hls,dash,rtmp,mp4,webm,audio
    # prop.player.allowedformats=hls,dash,mp4

    # Choose where the controls will be rendered
    # Options:
    #   - top
    #   - bottom
    prop.player.positioncontrols=bottom

    # Choose which layout should be applied if none is stored in the local storage of the browser
    # Options:
    #   - left
    #   - right
    #   - beside
    #   - off (default)
    prop.player.layout=off

    # Choose which flavor (without subflavor) should be focused in the layout if none is stored in the local storage.
    # The focused flavor will only be used if prop.player.layout is not "off".
    prop.player.focusedflavor=presentation

    # Hide the browser context menu on video elements (true|false)
    # Default: false
    prop.player.hide_video_context_menu=false

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.link_mediamodule=true

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.show_embed_links=true

    # Shortcut definitions for the html5 player
    # - modifier keys
    #   - shift
    #   - ctrl
    #   - alt
    #   - option
    #   - meta
    #   - command
    #   - mod -- combines Mac 'command' and Windows/Linux 'ctrl'
    # - special keys
    #   - backspace
    #   - tab
    #   - enter
    #   - return
    #   - capslock
    #   - esc
    #   - escape
    #   - space
    #   - pageup
    #   - pagedown
    #   - end
    #   - home
    #   - left
    #   - up
    #   - right
    #   - down
    #   - ins
    #   - del
    #   - plus
    # - any other key
    #   - should be referenceable by name like a, /, $, *, or =
    # - for more information have a look at the player docs
    prop.player.shortcut.controls.playPause=space
    prop.player.shortcut.controls.seekRight=right
    prop.player.shortcut.controls.seekLeft=left
    prop.player.shortcut.controls.jumpToBegin=backspace
    prop.player.shortcut.controls.prevChapter=pagedown
    prop.player.shortcut.controls.nextChapter=pageup
    prop.player.shortcut.playbackrate.increase=t
    prop.player.shortcut.playbackrate.decrease=T
    prop.player.shortcut.volume.muteToggle=m
    prop.player.shortcut.volume.up=9
    prop.player.shortcut.volume.down=8
    prop.player.shortcut.fullscreen.enable=mod+enter
    prop.player.shortcut.fullscreen.cancel=escape
    prop.player.shortcut.layout.focusNext=>
    prop.player.shortcut.layout.focusPrev=<
    prop.player.shortcut.layout.movePiP=p
    prop.player.shortcut.layout.togglePiP=o
    prop.player.shortcut.zoom.moveLeft=a
    prop.player.shortcut.zoom.moveRight=d
    prop.player.shortcut.zoom.moveUp=w
    prop.player.shortcut.zoom.moveDown=s
    prop.player.shortcut.zoom.in=plus
    prop.player.shortcut.zoom.out=-

    prop.player.shortcut-sequence=controls,volume,playbackrate,layout,zoom,fullscreen

    # Shortcut definitions for admin UI video player
    # Format: prop.admin.shortcut.player<action>=<key>
    prop.admin.shortcut.player.play_pause=space
    prop.admin.shortcut.player.previous_frame=left
    prop.admin.shortcut.player.next_frame=right
    prop.admin.shortcut.player.previous_segment=up
    prop.admin.shortcut.player.next_segment=down
    prop.admin.shortcut.player.step_backward=ctrl+left
    prop.admin.shortcut.player.step_forward=ctrl+right
    prop.admin.shortcut.player.volume_up=plus
    prop.admin.shortcut.player.volume_down=-
    prop.admin.shortcut.player.mute=m

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.editor.<action>=<key>
    prop.admin.shortcut.editor.split_at_current_time=v
    prop.admin.shortcut.editor.cut_selected_segment=backspace
    prop.admin.shortcut.editor.play_current_segment=c
    prop.admin.shortcut.editor.play_current_segment_with_pre-roll=C
    prop.admin.shortcut.editor.play_ending_of_current_segment=n
    prop.admin.shortcut.editor.clear_list=ctrl+backspace

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.general.<action>=<key>
    prop.admin.shortcut.general.new_event=n
    prop.admin.shortcut.general.new_series=N
    prop.admin.shortcut.general.event_view=e
    prop.admin.shortcut.general.series_view=s
    prop.admin.shortcut.general.remove_filters=r
    prop.admin.shortcut.general.select_next_dashboard_filter=f
    prop.admin.shortcut.general.select_previous_dashboard_filter=F
    prop.admin.shortcut.general.main_menu=m

    # Default values for fields in the tab Source of the Add Event wizard
    #
    # Automatically populates fields in the tab Source of the Add Event wizard.
    # The fields populated are 'Start Date', 'Start Time', 'End Time' and 'Duration' which are set as follows:
    #
    #  Start Date: Current day if the calculated timeslot is earlier than the cutoff time for the day, or the next day,
    #              i.e. today if possible, otherwise tomorrow.
    #  Start Time: Current time rounded up to the next available timeslot, or the first available timeslot on the next day.
    #  Duration:   The default duration of events
    #  End Time:   Start Time + Duration (implicit end date may be on next day)

    # Start time of first timeslot in the day
    # Format: HH:mm
    # Default: 08:00
    #prop.admin.event.new.start_time=08:00

    # Cut-off time for recordings in the day
    # Format: HH:mm
    # Default: 20:00
    #prop.admin.event.new.end_time=20:00

    # Duration of event recording in minutes
    # Default: 55
    #prop.admin.event.new.duration=55

    # Interval between recording start times in minutes
    # Default: 60
    #prop.admin.event.new.interval=60

    # Note: prop.admin.event.new.duration need not match prop.admin.event.new.interval;
    #       this is to allow short intermissions between consecutive events.

    # Preselect an appropriate weekday when scheduling multiple events.
    #
    # Format: Boolean
    # Default: true
    #
    #prop.admin.event.new.preselect_day=true

    #
    # Display durations for different notification types in SECONDS.
    #
    # If you specify the value -1 the notification will remain until manually closed by the user.

    # Display duration for notification type error
    #
    # Format: A integer or -1
    # Default: -1
    #
    #prop.admin.notification.duration.error=-1

    # Display duration for notification type success
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.success=5

    # Display duration for notification type warning
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.warning=5

    # If the preview mode in the video editor is enabled per default.
    #
    # Format: Boolean
    # Default: true
    #
    #prop.admin.editor.previewmode.default=true

    # Event access control update mode when modifying series permissions.
    # Possible modes are:
    # - always:   When modifying series permissions, automatically remove all permission rules specific to single episodes
    #             belonging to the series. This enforces every episode has the rules of the series in effect as soon as they
    #             are changed.
    # - never:    Only update the series permissions but never replace permissions set on event level. This can mean that
    #             updated rules have no effect on already existing events.
    # - optional: Like `never` but present users with a button in the series permission dialog which allows them to
    #             replace the event specific permissions if they want to.
    # Default: optional
    #prop.admin.series.acl.event.update.mode=optional
  paella-config.json: |
    {
      "player": {
        "accessControlClass": "OpencastAccessControl",
        "profileFrameStrategy": "paella.ProfileFrameStrategy",
        "videoQualityStrategy": "paella.BestFitVideoQualityStrategy",
        "reloadOnFullscreen": true,
        "videoZoom": {
          "enabled": true,
          "max": 800,
          "minWindowSize": 500
        },
        "deprecated-methods": [
          {
            "name": "streaming",
            "enabled": true
          },
          {
            "name": "html",
            "enabled": true
          },
          {
            "name": "flash",
            "enabled": false
          },
          {
            "name": "image",
            "enabled": true
          }
        ],
        "methods": [
          {
            "factory": "HLSVideoFactory",
            "enabled": true,
            "config": {
              "*** You can add more hls.js settings here": "https://github.com/video-dev/hls.js/blob/master/docs/API.md",
              "maxBufferLength": 30,
              "maxMaxBufferLength": 600,
              "maxBufferSize": 60000000,
              "maxBufferHole": 0.5,
              "lowBufferWatchdogPeriod": 0.5,
              "highBufferWatchdogPeriod": 3
            },
            "iOSMaxStreams": 1,
            "androidMaxStreams": 1
          },
          {
            "factory": "ChromaVideoFactory",
            "enabled": true
          },
          {
            "factory": "WebmVideoFactory",
            "enabled": true
          },
          {
            "factory": "Html5VideoFactory",
            "enabled": true
          },
          {
            "factory": "MpegDashVideoFactory",
            "enabled": true
          },
          {
            "factory": "RTMPVideoFactory",
            "enabled": true
          },
          {
            "factory": "ImageVideoFactory",
            "enabled": true
          },
          {
            "factory": "YoutubeVideoFactory",
            "enabled": true
          },
          {
            "factory": "Video360ThetaFactory",
            "enabled": true
          },
          {
            "factory": "Video360Factory",
            "enabled": true
          }
        ],
        "audioMethods": [
          {
            "factory": "MultiformatAudioFactory",
            "enabled": true
          }
        ],
        "rtmpSettings": {
          "bufferTime": 5,
          "requiresSubscription": false
        },
        "slidesMarks": {
          "enabled": true,
          "color": "gray"
        }
      },
      "defaultProfile": "presenter_presentation",
      "data": {
        "enabled": true,
        "dataDelegates": {
          "default": "MHAnnotationServiceDefaultDataDelegate",
          "trimming": "MHAnnotationServiceTrimmingDataDelegate",
          "metadata": "VideoManifestMetadataDataDelegate",
          "footprints": "MHFootPrintsDataDelegate",
          "cameraTrack": "OpencastTrackCameraDataDelegate"
        }
      },
      "folders": {
        "profiles": "config/profiles",
        "resources": "resources",
        "skins": "resources/style"
      },
      "experimental": {
        "autoplay": true
      },
      "skin": {
        "default": "dark",
        "available": [
          "dark",
          "dark_small",
          "light",
          "light_small"
        ]
      },
      "plugins": {
        "enablePluginsByDefault": false,
        "//**** Instructions: Disable any individual plugin by setting its enable property to false": {
          "enabled": false
        },
        "//**** For a list of available plugins and configuration, go to": "https://github.com/polimediaupv/paella/blob/develop/doc/adopters/plugins.md",
        "list": {
          "es.upv.paella.opencast.loader": {
            "orderTracks": ["presenter/delivery", "presenter/preview", "presentation/delivery", "presentation/preview"],
            "streams": [
              {
                "filter": {
                  "system": ["*"]
                },
                "tracks": {
                  "flavors": ["*/delivery"],
                  "tags": []
                }
              }
            ],
            "audioTag": {
            }
          },
          "//**** Video profile plugins": "",
          "es.upv.paella.singleStreamProfilePlugin": {
              "enabled": true,
              "videoSets": [
                { "icon":"professor_icon.svg", "id":"presenter", "content":["presenter"]},
                { "icon":"slide_icon.svg", "id":"presentation", "content":["presentation"]}
              ]
          },
          "es.upv.paella.dualStreamProfilePlugin": { "enabled":true,
            "videoSets": [
              { "icon":"slide_professor_icon.svg", "id":"presenter_presentation", "content":["presenter","presentation"] },
              { "icon":"slide_professor_icon.svg", "id":"presenter2_presentation", "content":["presenter-2","presentation"] },
              { "icon":"slide_professor_icon.svg", "id":"presenter3_presentation", "content":["presenter-3","presentation"] }
            ]
          },
          "es.upv.paella.tripleStreamProfilePlugin": {
            "enabled": true,
            "videoSets": [
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter2", "content":["presenter","presentation","multitrack"] },
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter3", "content":["presenter","presentation","presenter-2"] },
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter3", "content":["presenter","presentation","presenter-3"] }
            ]
          },
          "edu.harvard.dce.paella.flexSkipPlugin": {
            "enabled": true,
            "direction": "Rewind",
            "seconds": 10
          },
          "edu.harvard.dce.paella.flexSkipForwardPlugin": {
            "enabled": true,
            "direction": "Forward",
            "seconds": 30
          },
          "es.upv.paella.captionsPlugin": {
            "enabled": true,
            "searchOnCaptions": true
          },
          "es.upv.paella.extendedTabAdapterPlugin": {
            "enabled": true
          },
          "es.upv.paella.footprintsPlugin": {
            "enabled": false
          },
          "es.upv.paella.frameControlPlugin": {
            "enabled": true,
            "showFullPreview": "auto"
          },
          "es.upv.paella.fullScreenButtonPlugin": {
            "enabled": true,
            "reloadOnFullscreen": {
              "enabled": true,
              "keepUserSelection": true
            }
          },
          "es.upv.paella.helpPlugin": {
            "enabled": true,
            "langs": [
              "en",
              "es"
            ]
          },
          "es.upv.paella.multipleQualitiesPlugin": {
            "enabled": true,
            "showWidthRes": true
          },
          "es.upv.paella.playbackRatePlugin": {
            "enabled": true,
            "availableRates": [
              0.75,
              1,
              1.25,
              1.5,
              2
            ]
          },
          "es.upv.paella.playPauseButtonPlugin": {
            "enabled": true
          },
          "es.upv.paella.searchPlugin": {
            "enabled": true,
            "sortType": "time",
            "colorSearch": false
          },
          "es.upv.paella.socialPlugin": {
            "enabled": false
          },
          "es.upv.paella.themeChooserPlugin": {
            "enabled": false
          },
          "es.upv.paella.viewModePlugin": {
            "enabled": true
          },
          "es.upv.paella.volumeRangePlugin": {
            "enabled": true,
            "showMasterVolume": true,
            "showSlaveVolume": false
          },
          "es.upv.paella.pipModePlugin": {
            "enabled": true
          },
          "es.upv.paella.ratePlugin": {
            "enabled": false
          },
          "es.upv.paella.audioSelector": {
            "enabled": true
          },
          "es.upv.paella.videoZoomPlugin": {
            "enabled": true
          },
          "es.upv.paella.videoZoomToolbarPlugin": {
            "enabled": false,
            "targetStreamIndex": 0
          },
          "es.upv.paella.videoZoomTrack4kPlugin": {
            "enabled": true,
            "targetStreamIndex": 0,
            "autoModeByDefault": false
          },
          "es.upv.paella.airPlayPlugin": {
            "enabled": true
          },
          "es.upv.paella.liveStreamingIndicatorPlugin": {
            "enabled": true
          },
          "es.upv.paella.arrowSlidesNavigatorPlugin": {
            "enabled": true,
            "content":[
              "presentation",
              "presenter"
            ]
          },
          "es.upv.paella.videoDataPlugin": {
            "enabled": false,
            "excludeLocations": [
              "paellaplayer.upv.es"
            ],
            "excludeParentLocations": [
              "localhost:8000"
            ]
          },
          "es.upv.paella.commentsPlugin": {
            "enabled": false
          },
          "es.upv.paella.test.tabBarExamplePlugin": {
            "enabled": false
          },
          "es.upv.paella.blackBoardPlugin": {
            "enabled": true
          },
          "es.upv.paella.breaksPlayerPlugin": {
            "enabled": true
          },
          "es.upv.paella.overlayCaptionsPlugin": {
            "enabled": true
          },
          "es.upv.paella.playButtonOnScreenPlugin": {
            "enabled": true
          },
          "es.upv.paella.translecture.captionsPlugin": {
            "enabled": true
          },
          "es.upv.paella.trimmingPlayerPlugin": {
            "enabled": true
          },
          "es.upv.paella.windowTitlePlugin": {
            "enabled": true
          },
          "es.upv.paella.track4kPlugin": {
            "enabled": true
          },
          "es.upv.paella.captions.DFXPParserPlugin": {
            "enabled": true
          },
          "es.teltek.paella.captions.WebVTTParserPlugin": {
            "enabled": true
          },
          "es.upv.paella.search.captionsSearchPlugin": {
            "enabled": true
          },
          "es.upv.paella.frameCaptionsSearchPlugin": {
            "enabled": true
          },
          "es.upv.paella.usertracking.elasticsearchSaverPlugin": {
            "enabled": false,
            "url": "http://my.elastic.server"
          },
          "es.upv.paella.usertracking.GoogleAnalyticsSaverPlugIn": {
            "enabled": false,
            "trackingID": "UA-XXXXXXXX-Y"
          },
          "es.upv.paella.usertracking.piwikSaverPlugIn": {
            "enabled": false,
            "tracker": "http://localhost/piwik/",
            "siteId": "1"
          },
          {% if opencast.matomo is defined %}
          "org.opencast.usertracking.MatomoSaverPlugIn": {
            "enabled": true,
            "server": "{{ opencast.matomo.server }}",
            "site_id": {{ opencast.matomo.site_id }},
            "heartbeat": 30,
            "client_id": "Opencast - Paella Player"
          },
          {% endif %}
          "org.opencast.usertracking.MatomoSaverPlugIn": {
            "enabled": false,
            "server": "http://localhost/piwik/",
            "site_id": 1,
            "heartbeat": 30,
            "client_id": "Paella Player"
          },
          "org.opencast.usertracking.x5gonSaverPlugIn": {
            "enabled": false,
            "token": "X5GON_TOKEN",
            "testing_environment" : false
          },
          "es.teltek.paella.usertracking.xAPISaverPlugin": {
            "enabled": false,
            "endpoint": "http://localhost:8081/data/xAPI/",
            "auth": "auth_key"
          },
          "es.upv.paella.opencast.descriptionPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.downloadsPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.episodesFromSeries": {
            "enabled": true
          },
          "es.upv.paella.opencast.logIn": {
            "enabled": true
          },
          "es.upv.paella.opencast.searchPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.transcriptionTabBarPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.userTrackingSaverPlugIn": {
            "enabled": true
          },
          "es.upv.paella.defaultKeysPlugin": {
            "enabled": true
          }
        }
      }
    }
  {% if opencast.userdirectory.ldap is defined %}
  'org.opencastproject.userdirectory.ldap-{{ opencast.userdirectory.ldap.id }}.cfg': |
    #########
    ## Required configuration properties
    ######

    ## A unique identifier for this connection. It only has effect within Opencast.
    ## May be different as the <ID> used above, but this is not recommended for clarity
    ## IMPORTANT: This identifier must be the same as the one used in the security.xml
    ## file to get a reference to an 'authoritiesPopulator'
    org.opencastproject.userdirectory.ldap.id={{ opencast.userdirectory.ldap.id }}

    ## The URL to the LDAP server
    ## Example: ldap://ldap.berkeley.edu
    org.opencastproject.userdirectory.ldap.url={{ opencast.userdirectory.ldap.url }}

    ## The base path within LDAP to search for users
    ## Example: ou=people,dc=berkeley,dc=edu
    org.opencastproject.userdirectory.ldap.searchbase={{ opencast.userdirectory.ldap.searchbase }}

    ## The search filter to use for identifying users by ID
    ## Example: (uid={0})
    org.opencastproject.userdirectory.ldap.searchfilter={{ opencast.userdirectory.ldap.searchfilter }}

    ## The comma-separated list of attributes that will be translated into roles.
    ## Note that the attributes may be converted to uppercase and prefixed depending on the configuration below.
    ## Please refer to the documentation of the "roleprefix" property.
    ## Example: berkeleyEduAffiliations,departmentNumber
    org.opencastproject.userdirectory.ldap.roleattributes={{ opencast.userdirectory.ldap.roleattributes}}


    #########
    ## Optional configuration properties
    ######

    ## The user and password used for LDAP authentication.
    ## If left commented, the LDAP provider will use an anonymous bind.
    org.opencastproject.userdirectory.ldap.userDn={{ opencast.userdirectory.ldap.userdn }}
    org.opencastproject.userdirectory.ldap.password={{ opencast.userdirectory.ldap.password }}

    ## The maximum number of users to cache
    ## Default: 1000
    #org.opencastproject.userdirectory.ldap.cache.size=1000

    ## The maximum number of minutes to cache a user
    ## Default: 5
    #org.opencastproject.userdirectory.ldap.cache.expiration=5

    ## The organization for this provider
    ## Default: First available organization
    #org.opencastproject.userdirectory.ldap.org=mh_default_org

    ## A prefix to be added to the roles read by this provider
    ## The prefix is not added to a role if any of the following conditions is met:
    ## - The role starts with any of the prefixes defined in the parameter 'exclude.prefixes'
    ## - The role was not actually read from the provider, but defined in the 'extra.roles' list below
    ## Default: ROLE_
    #org.opencastproject.userdirectory.ldap.roleprefix=ROLE_

    ## A comma-separated list of prefixes. When the roles read from LDAP start with any of these, then the prefix defined
    ## above is not prepended to the role.
    ## Please note that if the "uppercase" parameter was provided, these prefixes are converted accordingly
    ## Default: <empty>
    #org.opencastproject.userdirectory.ldap.exclude.prefixes=

    ## Whether or not the role names should be converted to uppercase. It defaults to "true".
    ## Please note that this setting affects the prefix defined above.
    ## Default: true
    #org.opencastproject.userdirectory.ldap.uppercase=true

    ## A comma-separated list of extra roles to apply to all the users authenticated with this LDAP instance
    ## The roles in this list are converted to uppercase if the corresponding parameter is set. However, the 'roleprefix'
    ## setting does not affect them -i.e. they will not be further modified even if 'roleprefix' is set.
    ## Defaut: <empty>
    #org.opencastproject.userdirectory.ldap.extra.roles=
  {% endif %}
  org.opencastproject.distribution.streaming.wowza.WowzaAdaptiveStreamingDistributionService.cfg: |
    # Configures the formats that are distributed to the Wowza streaming service.
    # Possible options are: rtmp, hls, hds, smooth, dash
    # Default: hls, hds, smooth, dash
    org.opencastproject.streaming.formats=hls, hds, dash

    # Configure the order in which the different video qualities will be written in the
    # SMIL files. The sorting criteria is the video bitrate.
    # Possible values are "ascending" or "descending".
    # Default: ascending
    org.opencastproject.adaptive-streaming.smil.order=ascending

    # The load on the system introduced by creating a distribute job Each job involves copying the output file to the final
    # output directory. If possible, hard-linking is used for this which makes the job less expensive. If hard-linking if
    # not possible, you might want to increase this value.
    # Default: 0.1
    job.load.streaming.distribute=0.1

    # The load on the system introduced by creating a retract job. Each job involves deleting the output file from the
    # final output directory. This is a quick and inexpensive operation, so we can run a lot of these in parallel.
    # Default: 0.1
    job.load.streaming.retract=0.1
  ugent-schedule-and-upload.xml: |
    <definition xmlns="http://workflow.opencastproject.org">
        <id>1000</id>
        <title>UGent specific workflow for scheduled and uploaded events</title>
        <description>UGent workflow</description>
        <configuration_panel/>
        <tags>
            <tag>upload</tag>
            <tag>schedule</tag>
        </tags>
        <operations>
            <operation description="Applying default configuration values" id="defaults">
                <configurations>
                    <configuration key="uploadedSearchPreview">false</configuration>
                    <configuration key="thumbnailType">0</configuration>
                    <configuration key="thumbnailPosition">1</configuration>
                </configurations>
            </operation>
            <operation description="Finalize upload and ingest" id="include">
                <configurations>
                    <configuration key="workflow-id">partial-ingest</configuration>
                </configurations>
            </operation>
            <operation description="Archive raw recording after ingest" id="snapshot">
                <configurations>
                    <configuration key="source-tags">archive</configuration>
                </configurations>
            </operation>
            <operation description="Preparing presenter (camera) audio and video work versions" exception-handler-workflow="partial-error" id="prepare-av">
                <configurations>
                    <configuration key="source-flavor">presenter/source</configuration>
                    <configuration key="target-flavor">presenter/prepared</configuration>
                    <configuration key="target-tags">archive</configuration>
                    <configuration key="rewrite">false</configuration>
                    <configuration key="audio-muxing-source-flavors">*/?,*/*</configuration>
                </configurations>
            </operation>
            <operation description="Preparing presentation (screen) audio and video work version" exception-handler-workflow="partial-error" id="prepare-av">
                <configurations>
                    <configuration key="source-flavor">presentation/source</configuration>
                    <configuration key="target-flavor">presentation/prepared</configuration>
                    <configuration key="rewrite">false</configuration>
                    <configuration key="target-tags">archive</configuration>
                    <configuration key="audio-muxing-source-flavors">*/?,*/*</configuration>
                </configurations>
            </operation>
            <operation description="Publish the recording" id="include">
                <configurations>
                    <configuration key="workflow-id">ugent-partial-publish</configuration>
                </configurations>
            </operation>
            <operation description="Archive publishing information" id="snapshot">
                <configurations>
                    <configuration key="source-tags">archive</configuration>
                </configurations>
            </operation>
            <operation description="Remove temporary processing artifacts" fail-on-error="false" id="cleanup">
                <configurations>
                    <configuration key="delete-external">true</configuration>
                    <configuration key="preserve-flavors">security/*</configuration>
                </configurations>
            </operation>
        </operations>
        <roles>
            <role/>
        </roles>
    </definition>
  ugent-partial-publish.xml: |
    <definition xmlns="http://workflow.opencastproject.org">
        <id>ugent-partial-publish</id>
        <title>Publish the recording</title>
        <description/>
        <configuration_panel/>
        <tags>
            <tag/>
        </tags>
        <operations>
            <operation description="Preparing presenter (camera) audio and video work versions" exception-handler-workflow="partial-error" id="select-tracks">
                <configurations>
                    <configuration key="source-flavor">*/prepared</configuration>
                    <configuration key="target-flavor">*/work</configuration>
                    <configuration key="target-tags">-archive</configuration>
                </configurations>
            </operation>
            <operation description="Analyze tracks in media package a set control variables" exception-handler-workflow="partial-error" id="analyze-tracks">
                <configurations>
                    <configuration key="source-flavor">*/work</configuration>
                </configurations>
            </operation>
            <operation description="Tagging uploaded assets for distribution" exception-handler-workflow="partial-error" id="tag" if="${downloadSourceflavorsExist}">
                <configurations>
                    <configuration key="source-flavors">${download-source-flavors}</configuration>
                    <configuration key="target-tags">+engage-download</configuration>
                </configurations>
            </operation>
            <operation description="Creating search result default thumbnails" exception-handler-workflow="partial-error" id="image" if="NOT(${uploadedSearchPreview}) AND ${thumbnailType}==0 AND ${presenter_work_video}">
                <configurations>
                    <configuration key="source-flavor">presenter/work</configuration>
                    <configuration key="target-flavor">presenter/search+preview</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                    <configuration key="encoding-profile">search-cover.http</configuration>
                    <configuration key="time">${thumbnailPosition}</configuration>
                </configurations>
            </operation>
            <operation description="Creating search result default thumbnails" exception-handler-workflow="partial-error" id="image" if="NOT(${uploadedSearchPreview}) AND ${thumbnailType}==0 AND (${presentation_work_video} AND NOT(${presenter_work_video}))">
                <configurations>
                    <configuration key="source-flavor">presentation/work</configuration>
                    <configuration key="target-flavor">presentation/search+preview</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                    <configuration key="encoding-profile">search-cover.http</configuration>
                    <configuration key="time">${thumbnailPosition}</configuration>
                </configurations>
            </operation>
            <operation description="Creating player preview image" exception-handler-workflow="partial-error" id="image">
                <configurations>
                    <configuration key="source-flavor">*/work</configuration>
                    <configuration key="source-tags"/>
                    <configuration key="target-flavor">*/player+preview</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                    <configuration key="encoding-profile">player-preview.http</configuration>
                    <configuration key="time">1</configuration>
                </configurations>
            </operation>
            <operation description="Creating feed cover image" exception-handler-workflow="partial-error" id="image">
                <configurations>
                    <configuration key="source-flavor">*/work</configuration>
                    <configuration key="source-tags"/>
                    <configuration key="target-flavor">*/feed+preview</configuration>
                    <configuration key="target-tags">atom,rss</configuration>
                    <configuration key="encoding-profile">feed-cover.http</configuration>
                    <configuration key="time">1</configuration>
                </configurations>
            </operation>
            <operation description="Removing unneeded presenter-cover from download publication" id="tag">
                <configurations>
                    <configuration key="source-flavors">presenter/player+preview</configuration>
                    <configuration key="target-tags">-engage-download</configuration>
                </configurations>
            </operation>
            <operation description="Creating player preview image" exception-handler-workflow="partial-error" id="image">
                <configurations>
                    <configuration key="source-flavor">presenter/work</configuration>
                    <configuration key="source-tags"/>
                    <configuration key="target-flavor">presenter/coverbackground</configuration>
                    <configuration key="encoding-profile">player-preview.http</configuration>
                    <configuration key="time">1</configuration>
                </configurations>
            </operation>
            <operation description="Create a cover image" exception-handler-workflow="partial-error" fail-on-error="true" id="cover-image">
                <configurations>
                    <configuration key="stylesheet">file://${karaf.etc}/branding/coverimage.xsl</configuration>
                    <configuration key="width">1920</configuration>
                    <configuration key="height">1080</configuration>
                    <configuration key="posterimage-flavor">presenter/coverbackground</configuration>
                    <configuration key="target-flavor">presenter/player+preview</configuration>
                    <configuration key="target-tags">archive, engage-download</configuration>
                </configurations>
            </operation>
            <operation description="Creating timeline preview images" exception-handler-workflow="partial-error" fail-on-error="false" id="timelinepreviews">
                <configurations>
                    <configuration key="source-flavor">*/work</configuration>
                    <configuration key="target-flavor">*/timeline+preview</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                    <configuration key="image-count">100</configuration>
                </configurations>
            </operation>
            <operation description="Encoding 720p video to MP4 download" exception-handler-workflow="partial-error" id="compose">
                <configurations>
                    <configuration key="source-flavor">*/work</configuration>
                    <configuration key="target-flavor">*/delivery</configuration>
                    <configuration key="target-tags">engage-download,engage-streaming,720p-quality</configuration>
                    <configuration key="encoding-profile">adaptive-720p.http</configuration>
                </configurations>
            </operation>
            <operation description="Detecting slide transitions in presentation track" fail-on-error="false" id="segment-video">
                <configurations>
                    <configuration key="source-flavor">presentation/work</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                </configurations>
            </operation>
            <operation description="Creating preview images for presentation segments" fail-on-error="false" id="segmentpreviews">
                <configurations>
                    <configuration key="source-flavor">presentation/work</configuration>
                    <configuration key="target-flavor">presentation/segment+preview</configuration>
                    <configuration key="reference-flavor">presentation/delivery</configuration>
                    <configuration key="reference-tags">engage-download</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                    <configuration key="encoding-profile">player-slides.http</configuration>
                </configurations>
            </operation>
            <operation description="Extracting text from presentation segments" fail-on-error="false" id="extract-text">
                <configurations>
                    <configuration key="source-flavor">presentation/work</configuration>
                    <configuration key="target-tags">engage-download</configuration>
                </configurations>
            </operation>
            <operation description="Publishing to Opencast Media Module" exception-handler-workflow="partial-error" id="publish-engage" max-attempts="2">
                <configurations>
                    <configuration key="download-source-flavors">dublincore/*,security/*</configuration>
                    <configuration key="download-source-tags">engage-download,atom,rss,mobile</configuration>
                    <configuration key="streaming-source-tags">engage-streaming</configuration>
                    <configuration key="check-availability">true</configuration>
                </configurations>
            </operation>
            <operation description="Publish to external api publication channel" exception-handler-workflow="partial-error" id="publish-configure">
                <configurations>
                    <configuration key="channel-id">api</configuration>
                    <configuration key="mimetype">application/json</configuration>
                    <configuration key="source-tags">engage-download,engage-streaming</configuration>
                    <configuration key="url-pattern">http://localhost:8080/api/events/${event_id}</configuration>
                    <configuration key="with-published-elements">false</configuration>
                    <configuration key="check-availability">true</configuration>
                </configurations>
            </operation>
            <operation description="Publish to OAI-PMH Default Repository" exception-handler-workflow="partial-error" id="publish-oaipmh">
                <configurations>
                    <configuration key="download-flavors">dublincore/*,security/*</configuration>
                    <configuration key="download-tags">engage-download,atom,rss</configuration>
                    <configuration key="streaming-tags">engage-streaming</configuration>
                    <configuration key="check-availability">true</configuration>
                    <configuration key="repository">default</configuration>
                </configurations>
            </operation>
        </operations>
        <roles>
            <role/>
        </roles>
    </definition>
  org.ops4j.pax.logging.cfg: |
    # Colors for log level rendering
    color.fatal = bright red
    color.error = bright red
    color.warn = bright yellow
    color.info = bright green
    color.debug = cyan
    color.trace = cyan

    # Common pattern layout for appenders
    # see: https://logging.apache.org/log4j/2.x/manual/layouts.html#Patterns
    log4j2.pattern =  %d{ISO8601} | %-5.5p | (%C{1}:%L) - %m%n

    # Root logger
    log4j2.rootLogger.level = WARN
    log4j2.rootLogger.appenderRef.PaxOsgi.ref = PaxOsgi
    log4j2.rootLogger.appenderRef.Console.ref = Console

    # Loggers configuration

    # Loglevel configuration for all opencast modules. Usually, INFO is a quite sane log level. If you need a different
    # detail level of logs, you can adjust this to: ERROR, WARN, INFO, DEBUG, TRACE.
    log4j2.logger.opencast.name = org.opencastproject
    log4j2.logger.opencast.level = {{ opencast.loglevel | default('INFO') }}

    # You can specify different log levels for different packages/modules by specifying their package component names. For
    # example, to raise the log level to DEBUG for the rest endpoints contained in the kernel module, set:
    #log4j2.logger.ingest.name = org.opencastproject.ingest
    #log4j2.logger.ingest.level = DEBUG

    # extra logging for spring security
    #log4j2.logger.springsecurity.name = org.springframework.security
    #dlog4j2.logger.springsecurity.level = DEBUG

    # For Karaf, Felix & CXF, we want to see some more details in the logs
    log4j2.logger.karaf.name = org.apache.karaf
    log4j2.logger.karaf.level = WARN
    log4j2.logger.felix.name = org.apache.felix
    log4j2.logger.felix.level = WARN
    log4j2.logger.cxf.name = org.apache.cxf
    log4j2.logger.cxf.level = WARN

    # Appenders configuration

    # Console appender used for Docker
    log4j2.appender.console.type = Console
    log4j2.appender.console.name = Console
    log4j2.appender.console.layout.type = PatternLayout
    log4j2.appender.console.layout.pattern = ${log4j2.pattern}

    # OSGi appender
    log4j2.appender.osgi.type = PaxOsgi
    log4j2.appender.osgi.name = PaxOsgi
    log4j2.appender.osgi.filter = *