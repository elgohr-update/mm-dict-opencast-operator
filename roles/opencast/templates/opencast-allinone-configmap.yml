---
kind: ConfigMap
apiVersion: v1
metadata:
  name: '{{ meta.name }}-opencast-allinone-config'
  namespace: '{{ meta.namespace }}'
data:
  org.opencastproject.lti.endpoint.EventsEndpoint.cfg: |
    # Which workflow to use when uploading videos
    workflow=schedule-and-upload
    # Configuration for the workflow
    workflow-configuration={"flagForCutting":"false","flagForReview":"false","publishToEngage":"true","publishToHarvesting":"true","straightToPublishing":"true"}
    # After deletion, events are retracted with this workflow
    retract-workflow-id=retract
  org.opencastproject.liveschedule.impl.LiveScheduleServiceImpl.cfg: |
    # Configuration for the Live Schedule Service

    #
    # If the capture agent doesn't register the capture.device.live.resolution.WIDTHxHEIGHT property,
    # specify live.streamingUrl, live.resolution, and live.streamName below:
    #
    # -----------------------------

    # The streaming base url e.g. rtmp://streaming.server/live/
    live.streamingUrl=rtmp://wowza.ugent.be:1935/galicaster-edge

    # If a comma-separated list is provided, several resolutions will be generated for each flavor
    live.resolution=1920x1080

    # Possible variable substitutions:
    # #{id} = media package id
    # #{flavor} = type-subtype of flavor
    # #{caName} = capture agent name
    # #{resolution} = video resolution e.g. 1920x1080
    #live.streamName=#{id}-#{flavor}.stream
    live.streamName=#{caName}

    # -----------------------------

    # The same mime-type applies to all flavors and resolutions
    live.mimeType=video/x-flv

    # If a comma-separated list is provided, several streams links will be generated, one for each
    # resolution-targetFlavor combination.
    # Default is presenter/delivery
    #live.targetFlavors=presenter/delivery

    # The distribution service to use: download or aws.s3
    live.distributionService=download

    # A list of combinations with target flavor and resolution for which streaming URIs should be published.
    # For example: live.publishStreaming=presenter/delivery:1920x540
    # Default is not to publish streaming URIs
    # live.publishStreaming=
  org.opencastproject.kernel.security.LtiLaunchAuthenticationHandler.cfg: |
    # OAuth consumer keys with should be highly trusted.
    #
    # By default OAuth consumer are regarded as untrusted and a user authenticating via such
    # systems receives a rewritten username in the form of "lti:{ltiConsumerGUID}:{ltiUserID}".
    # This user is regarded as a new user temporarily existing for the duration of the session.
    # Opencast roles associated with the original user will not be attached to this user.
    #
    # Usernames of users authenticating via highly trusted systems will not be rewritten except
    # for the cases configured in the additional options below.
    #
    # Multiple consumer keys can be configured, by incrementing the counter. The list is read
    # sequentially incrementing the counter. If you miss any numbers it will stop looking for
    # further consumer keys.
    lti.oauth.highly_trusted_consumer_key.1='{{ opencast.lti.highly_trusted_consumer_key }}'

    # Allow the Opencast system administrator user to authenticate as such via LTI.
    #
    # Note that this user may still authenticate via LTI, but the username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Note that this option does not apply to custom users having the ROLE_ADMIN. Use the
    # blacklist below instead.
    #
    # Default: false
    #lti.allow_system_administrator=false

    # Allow the Opencast digest user to authenticate as such via LTI.
    #
    # Note that this user may still authenticate via LTI, but the username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Default: false
    #lti.allow_digest_user=false

    # A blacklist of users not allowed to authenticate via LTI as themselves.
    #
    # Note that these users may still authenticate via LTI, but their username will be rewritten,
    # even if a trusted OAuth consumer key is used.
    #
    # Multiple users can be configured, by incrementing the counter. The list is read sequentially
    # incrementing the counter. If you miss any numbers it will stop looking for further users.
    #
    # Default: no blacklisted users
    #lti.blacklist.user.1=
    # A custom username field to use with the lti authentication.
    #
    # This can be useful with LMS's that use non-default sourcedid field.
    #
    # Default: no custom_username
    lti.custom_username=ext_d2l_orgdefinedid
  org.opencastproject.kernel.security.OAuthConsumerDetailsService.cfg: |
    # OAuth consumer consisting of name, key and secret.
    #
    # Multiple OAuth consumers can be configured, by incrementing the counter. The list is read
    # sequentially incrementing the counter. If you miss any numbers it will stop looking for
    # further consumers.
    oauth.consumer.name.1='{{ opencast.oauth.consumer.name }}'
    oauth.consumer.key.1='{{ opencast.oauth.consumer.key }}'
    oauth.consumer.secret.1='{{ opencast.oauth.consumer.secret }}'
  org.opencastproject.organization-mh_default_org.cfg: |
    # Organization (tenant) definition.
    #
    # With Opencast being capable of hosting multiple tenants per installation, there needs
    # to be one organization configuration per tenant.
    #
    # Therefore, in order to add another tenant to the installation, put a file named
    # org.opencastproject.organization-<tenant id>.cfg into Opencast's "load" directory.
    # Make sure to adjust at least the following fields to properly map the new tenant to the
    # installation:
    #
    #   - id
    #   - server
    #   - port
    #   - prop.org.opencastproject.admin.ui.url
    #   - prop.org.opencastproject.engage.ui.url
    #   - prop.org.opencastproject.external.api.url
    #   - prop.org.opencastproject.assetmanager.url
    #

    # Identifier of the tenant on this Opencast installation.
    #
    # The identifier is used to map data that belongs to this tenant only as well as during
    # lookup of related configuration entities such as the security settings in etc/security.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    #
    id=mh_default_org

    # Name of the organization (tenant).
    #
    # Value: <text>
    #
    name=Opencast Project

    # Server names that belong to this organization (tenant)
    #
    # Use the public domain names which are assigned to this tenant. Multiple values can be separated by comma. The final
    # set of domain names identifying this organization within Opencast will be the union of all domains defined on all
    # nodes.
    #
    # The usage of this is to map a request to a specific organization. For example, if admin-a.opencast.org is configured
    # as part of this organizations server list and an HTTP request uses this domain name, Opencast knows that the requests
    # belongs to this organization.
    #
    # If multi-tenancy is not configured (only one tenant in the system), organization mapping will automatically fall back
    # to the default organization regardless of this keys value, making it unnecessary to configure this at all.
    #
    # Important notices:
    #  - Values read from here are stored in the database (table oc_organization_node) and will not be removed if a node is
    #    removed from this list.
    #  - Do not include schema or port but use the domain name only.
    #
    # Value: <domain name 1>[,<domain name 2>,‚Ä¶]
    #
    server=localhost

    # Port for this tenant.
    #
    # When run behind a proxy server, set this to -1 since most proxies won't forward the
    # original port and set the corresponding field in the request to this value.
    #
    # Value: <integer port number>
    #
    port=-1

    # Identifier of the Administrative role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ADMIN
    #
    admin_role=ROLE_ADMIN

    # Identifier of the Anonymous role.
    #
    # Value: a text identifier using [a-Z, 0..9, _, -] as characters.
    # Default: ROLE_ANONYMOUS
    #
    anonymous_role=ROLE_ANONYMOUS

    # The base URL of the file server. When using a shared filesystem between servers, set all servers to use the same URL.
    # Only then will hard linking between the working file repository and the workspace be enabled to prevent downloads.
    #
    # Value: <a complete url with scheme and port>
    # Default: the value of ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.file.repo.url=${prop.org.opencastproject.admin.ui.url}

    # Link to the Admin UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.admin.ui.url={{ opencast.admin.ui.url }}

    ###
    # OAI-PMH

    # The host URL of the OAI-PMH server. Remember to omit the mount point since it is read
    # from custom.properties -> org.opencastproject.oaipmh.mountpoint
    prop.org.opencastproject.oaipmh.server.hosturl=${prop.org.opencastproject.engage.ui.url}

    # Link to the Opencast documentation.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.documentation.url=https://docs.opencast.org

    # Link to the Opencast REST service documentation for the local system.
    #
    # If the property is specified, the admin ui help menu will link to the documentation.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.help.restdocs.url=/rest_docs.html

    # Link to the media module
    #
    # If the property is specified, the admin ui will show a media module icon on the top-right that links
    # to the media module.
    # The value needs to be a URL if set.
    # Default: undefined
    prop.org.opencastproject.admin.mediamodule.url=${prop.org.opencastproject.engage.ui.url}/engage/ui

    # Link to a JIRA feedback widget collector.
    #
    # If the property is specified, the feedback button in the lower right corner will
    # link to the widget and allow to create issues right inside the project. If the
    # property is not specified, the feedback button will be hidden.
    #
    # Value: <a complete url with scheme and port>
    #
    #prop.org.opencastproject.admin.feedback.url=

    # Link to the Engage UI.
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    prop.org.opencastproject.engage.ui.url={{ opencast.engage.ui.url }}

    # Link to the RSS and atom feed base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.feed.url=http://localhost:8080

    # Link to the External API
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.external.api.url=http://localhost:8080

    # Link to the AssetManager base
    #
    # Value: <a complete url with scheme and port>
    # Default: ${org.opencastproject.server.url}
    #
    #prop.org.opencastproject.assetmanager.url=http://localhost:8080

    # Path to the logo that is displayed in the upper left part of the
    # media module page.
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_mediamodule=/engage/ui/img/logo/opencast-icon.svg

    # Path to the logo that is displayed in the Opencast 2.0 player
    #
    # Value: <a complete url with scheme and port>
    #
    prop.logo_player=/engage/theodul/ui/img/opencast.svg

    # Set a flag to display External Roles on User modal
    #
    # Value: <boolean>
    # Default: false
    prop.adminui.user.external_role_display=false

    # Name of the list to provide a user listing as used in the group editor of the admin ui.
    #
    # Values:
    # - USERS.INVERSE will list users by name (e.g. "John Sample")
    # - USERS.INVERSE.WITH.EMAIL will list users by name and email (e.g. "John Sample <j.sample@opencast.org>")
    # - USERS.INVERSE.WITH.USERNAME will list users by name and username (e.g. "John Sample (jsample)")
    # Default: USERS.INVERSE.WITH.USERNAME
    #prop.adminui.user.listname=USERS.INVERSE.WITH.USERNAME

    #
    # USER TRACKING IN PLAYER
    # These settings allow a tracking of user interaction with Matomo (https://matomo.org/) in the Opencast Player
    # Only if a Matomo server is provided the Matomo plugin will be activated.
    #

    # The Matomo server from which the Piwik JS library will be loaded and where the data will be reported
    #prop.player.matomo.server=https://matomo.ugent.be

    # The Matomo site ID has to be numeric value. If not set this will be 1.
    #prop.player.matomo.site_id=71

    # The heartbeat setting to track how long a user stayed on the player page. Set to 0 or comment this line to
    # disable the heartbeat
    #prop.player.matomo.heartbeat=30

    # Notification that matomo is tracking the user, set to false to disable notifications (default true)
    #prop.player.matomo.notification=true

    # This setting lets you track several player events. Add the events that you want to track to the list. Comment this
    # line to prevent event tracking
    # Events that can be tracked:
    # - play: play has been pressed (will also be called if after seeking).
    # - pause: pause has been pressend (will also be called if before seeking).
    # - seek: user jumps to a different time. Time in seconds will be stored
    # - ended: video has reached the end
    # - playbackrate: user changes the playback speed (values 0.75 to 3.00)
    # - volume: Volume change by the user value 0.0 to 1.0
    # - quality: manual change of video quality (quality tag is stored)
    # - fullscreen: user presses fullscreen button
    # - focus: user selects one video to be enlarged (flavor of selected video is stored)
    # - layout_reset: user switches back to default layout
    # - zoom: user changes the zoom of the video
    prop.player.matomo.track_events=play, pause, seek, ended, playbackrate, volume, quality, fullscreen, focus, layout_reset, zoom

    # Path to the default video player used by the engage interfaces and the LTI tools. Parameters for selecting the
    # specific videos will be appended automatically.  Common values include:
    #
    # - theodul player: /engage/theodul/ui/core.html?id=#{id}
    # - paella  player: /paella/ui/watch.html?id=#{id}
    #
    # Default: /engage/theodul/ui/core.html?id=#{id}
    prop.player=/paella/ui/watch.html?id=#{id}

    # The default flavor of the master video (the video on the "left side" in the video display)
    prop.player.mastervideotype=presenter/delivery

    # Play only videos that are tagged with one of these tags
    # default: don't filter for tags at all
    prop.player.allowedtags=engage-streaming

    # Play only videos that use these video/streaming formats.
    # The format setting in the browser will be done for what is left after these have been filtered
    # with this setting.
    # default: don't filter for video/streaming formats at all
    # allowed values: hls,dash,rtmp,mp4,webm,audio
    # prop.player.allowedformats=hls,dash,mp4

    # Choose where the controls will be rendered
    # Options:
    #   - top
    #   - bottom
    prop.player.positioncontrols=bottom

    # Choose which layout should be applied if none is stored in the local storage of the browser
    # Options:
    #   - left
    #   - right
    #   - beside
    #   - off (default)
    prop.player.layout=off

    # Choose which flavor (without subflavor) should be focused in the layout if none is stored in the local storage.
    # The focused flavor will only be used if prop.player.layout is not "off".
    prop.player.focusedflavor=presentation

    # Hide the browser context menu on video elements (true|false)
    # Default: false
    prop.player.hide_video_context_menu=false

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.link_mediamodule=true

    # Link back to Media Module from Theodul player (true|false)
    # Default: false
    prop.show_embed_links=true

    # Shortcut definitions for the html5 player
    # - modifier keys
    #   - shift
    #   - ctrl
    #   - alt
    #   - option
    #   - meta
    #   - command
    #   - mod -- combines Mac 'command' and Windows/Linux 'ctrl'
    # - special keys
    #   - backspace
    #   - tab
    #   - enter
    #   - return
    #   - capslock
    #   - esc
    #   - escape
    #   - space
    #   - pageup
    #   - pagedown
    #   - end
    #   - home
    #   - left
    #   - up
    #   - right
    #   - down
    #   - ins
    #   - del
    #   - plus
    # - any other key
    #   - should be referenceable by name like a, /, $, *, or =
    # - for more information have a look at the player docs
    prop.player.shortcut.controls.playPause=space
    prop.player.shortcut.controls.seekRight=right
    prop.player.shortcut.controls.seekLeft=left
    prop.player.shortcut.controls.jumpToBegin=backspace
    prop.player.shortcut.controls.prevChapter=pagedown
    prop.player.shortcut.controls.nextChapter=pageup
    prop.player.shortcut.playbackrate.increase=t
    prop.player.shortcut.playbackrate.decrease=T
    prop.player.shortcut.volume.muteToggle=m
    prop.player.shortcut.volume.up=9
    prop.player.shortcut.volume.down=8
    prop.player.shortcut.fullscreen.enable=mod+enter
    prop.player.shortcut.fullscreen.cancel=escape
    prop.player.shortcut.layout.focusNext=>
    prop.player.shortcut.layout.focusPrev=<
    prop.player.shortcut.layout.movePiP=p
    prop.player.shortcut.layout.togglePiP=o
    prop.player.shortcut.zoom.moveLeft=a
    prop.player.shortcut.zoom.moveRight=d
    prop.player.shortcut.zoom.moveUp=w
    prop.player.shortcut.zoom.moveDown=s
    prop.player.shortcut.zoom.in=plus
    prop.player.shortcut.zoom.out=-

    prop.player.shortcut-sequence=controls,volume,playbackrate,layout,zoom,fullscreen

    # Shortcut definitions for admin UI video player
    # Format: prop.admin.shortcut.player<action>=<key>
    prop.admin.shortcut.player.play_pause=space
    prop.admin.shortcut.player.previous_frame=left
    prop.admin.shortcut.player.next_frame=right
    prop.admin.shortcut.player.previous_segment=up
    prop.admin.shortcut.player.next_segment=down
    prop.admin.shortcut.player.step_backward=ctrl+left
    prop.admin.shortcut.player.step_forward=ctrl+right
    prop.admin.shortcut.player.volume_up=plus
    prop.admin.shortcut.player.volume_down=-
    prop.admin.shortcut.player.mute=m

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.editor.<action>=<key>
    prop.admin.shortcut.editor.split_at_current_time=v
    prop.admin.shortcut.editor.cut_selected_segment=backspace
    prop.admin.shortcut.editor.play_current_segment=c
    prop.admin.shortcut.editor.play_current_segment_with_pre-roll=C
    prop.admin.shortcut.editor.play_ending_of_current_segment=n
    prop.admin.shortcut.editor.clear_list=ctrl+backspace

    # Shortcut definitions for admin UI video editor
    # Format: prop.admin.shortcut.general.<action>=<key>
    prop.admin.shortcut.general.new_event=n
    prop.admin.shortcut.general.new_series=N
    prop.admin.shortcut.general.event_view=e
    prop.admin.shortcut.general.series_view=s
    prop.admin.shortcut.general.remove_filters=r
    prop.admin.shortcut.general.select_next_dashboard_filter=f
    prop.admin.shortcut.general.select_previous_dashboard_filter=F
    prop.admin.shortcut.general.main_menu=m

    # Default values for fields in the tab Source of the Add Event wizard
    #
    # Automatically populates fields in the tab Source of the Add Event wizard.
    # The fields populated are 'Start Date', 'Start Time', 'End Time' and 'Duration' which are set as follows:
    #
    #  Start Date: Current day if the calculated timeslot is earlier than the cutoff time for the day, or the next day,
    #              i.e. today if possible, otherwise tomorrow.
    #  Start Time: Current time rounded up to the next available timeslot, or the first available timeslot on the next day.
    #  Duration:   The default duration of events
    #  End Time:   Start Time + Duration (implicit end date may be on next day)

    # Start time of first timeslot in the day
    # Format: HH:mm
    # Default: 08:00
    #prop.admin.event.new.start_time=08:00

    # Cut-off time for recordings in the day
    # Format: HH:mm
    # Default: 20:00
    #prop.admin.event.new.end_time=20:00

    # Duration of event recording in minutes
    # Default: 55
    #prop.admin.event.new.duration=55

    # Interval between recording start times in minutes
    # Default: 60
    #prop.admin.event.new.interval=60

    # Note: prop.admin.event.new.duration need not match prop.admin.event.new.interval;
    #       this is to allow short intermissions between consecutive events.

    # Preselect an appropriate weekday when scheduling multiple events.
    #
    # Format: Boolean
    # Default: true
    #
    #prop.admin.event.new.preselect_day=true

    #
    # Display durations for different notification types in SECONDS.
    #
    # If you specify the value -1 the notification will remain until manually closed by the user.

    # Display duration for notification type error
    #
    # Format: A integer or -1
    # Default: -1
    #
    #prop.admin.notification.duration.error=-1

    # Display duration for notification type success
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.success=5

    # Display duration for notification type warning
    #
    # Format: A integer or -1
    # Default: 5
    #
    #prop.admin.notification.duration.warning=5

    # If the preview mode in the video editor is enabled per default.
    #
    # Format: Boolean
    # Default: true
    #
    #prop.admin.editor.previewmode.default=true

    # Event access control update mode when modifying series permissions.
    # Possible modes are:
    # - always:   When modifying series permissions, automatically remove all permission rules specific to single episodes
    #             belonging to the series. This enforces every episode has the rules of the series in effect as soon as they
    #             are changed.
    # - never:    Only update the series permissions but never replace permissions set on event level. This can mean that
    #             updated rules have no effect on already existing events.
    # - optional: Like `never` but present users with a button in the series permission dialog which allows them to
    #             replace the event specific permissions if they want to.
    # Default: optional
    #prop.admin.series.acl.event.update.mode=optional
  paella-config.json: |
    {
      "player": {
        "accessControlClass": "OpencastAccessControl",
        "profileFrameStrategy": "paella.ProfileFrameStrategy",
        "videoQualityStrategy": "paella.BestFitVideoQualityStrategy",
        "reloadOnFullscreen": true,
        "videoZoom": {
          "enabled": true,
          "max": 800,
          "minWindowSize": 500
        },
        "deprecated-methods": [
          {
            "name": "streaming",
            "enabled": true
          },
          {
            "name": "html",
            "enabled": true
          },
          {
            "name": "flash",
            "enabled": true
          },
          {
            "name": "image",
            "enabled": true
          }
        ],
        "methods": [
          {
            "factory": "HLSVideoFactory",
            "enabled": true
          },
          {
            "factory": "MpegDashVideoFactory",
            "enabled": false
          },
          {
            "factory": "ChromaVideoFactory",
            "enabled": true
          },
          {
            "factory": "WebmVideoFactory",
            "enabled": true
          },
          {
            "factory": "Html5VideoFactory",
            "enabled": true
          },
          {
            "factory": "RTMPVideoFactory",
            "enabled": true
          },
          {
            "factory": "ImageVideoFactory",
            "enabled": true
          },
          {
            "factory": "YoutubeVideoFactory",
            "enabled": true
          },
          {
            "factory": "Video360ThetaFactory",
            "enabled": true
          },
          {
            "factory": "Video360Factory",
            "enabled": true
          }
        ],
        "audioMethods": [
          {
            "factory": "MultiformatAudioFactory",
            "enabled": true
          }
        ],
        "audio": {
            "master": 1.0,
            "slave": 0
        },
        "rtmpSettings": {
          "bufferTime": 5,
          "requiresSubscription": false
        },
        "slidesMarks": {
          "enabled": true,
          "color": "gray"
        }
      },
      "defaultProfile": "presenter_presentation",
      "data": {
        "enabled": true,
        "dataDelegates": {
          "default": "MHAnnotationServiceDefaultDataDelegate",
          "trimming": "MHAnnotationServiceTrimmingDataDelegate",
          "metadata": "VideoManifestMetadataDataDelegate",
          "footprints": "MHFootPrintsDataDelegate",
          "cameraTrack": "OpencastTrackCameraDataDelegate"
        }
      },
      "folders": {
        "profiles": "config/profiles",
        "resources": "resources",
        "skins": "resources/style"
      },
      "experimental": {
        "autoplay": true
      },
      "skin": {
        "default": "dark",
        "available": [
          "dark",
          "dark_small",
          "light",
          "light_small"
        ]
      },
      "plugins": {
        "enablePluginsByDefault": false,
        "//**** Instructions: Disable any individual plugin by setting its enable property to false": {
          "enabled": false
        },
        "//**** For a list of available plugins and configuration, go to": "https://github.com/polimediaupv/paella/blob/master/doc/plugins.md",
        "list": {
          "es.upv.paella.opencast.loader": {
            "flavors": [
              ["*", "delivery"]
            ]
          },
          "//**** Video profile plugins": "",
          "es.upv.paella.singleStreamProfilePlugin": {
              "enabled": true,
              "videoSets": [
                { "icon":"professor_icon.svg", "id":"presenter", "content":["presenter"]},
                { "icon":"slide_icon.svg", "id":"presentation", "content":["presentation"]}
              ]

          },
          "es.upv.paella.dualStreamProfilePlugin": { "enabled":true,
            "videoSets": [
              { "icon":"slide_professor_icon.svg", "id":"presenter_presentation", "content":["presenter","presentation"] },
              { "icon":"slide_professor_icon.svg", "id":"presenter2_presentation", "content":["presenter-2","presentation"] },
              { "icon":"slide_professor_icon.svg", "id":"presenter3_presentation", "content":["presenter-3","presentation"] }
            ]
          },
          "es.upv.paella.tripleStreamProfilePlugin": {
            "enabled": false,
            "videoSets": [
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter2", "content":["presenter","presentation","multitrack"] },
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter3", "content":["presenter","presentation","presenter-2"] },
              { "icon":"three_streams_icon.svg", "id":"presenter_presentation_presenter3", "content":["presenter","presentation","presenter-3"] }
            ]
          },
          "edu.harvard.dce.paella.flexSkipPlugin": {
            "enabled": true,
            "direction": "Rewind",
            "seconds": 10
          },
          "edu.harvard.dce.paella.flexSkipForwardPlugin": {
            "enabled": true,
            "direction": "Forward",
            "seconds": 30
          },
          "es.upv.paella.captionsPlugin": {
            "enabled": true,
            "searchOnCaptions": true
          },
          "es.upv.paella.extendedTabAdapterPlugin": {
            "enabled": true
          },
          "es.upv.paella.footprintsPlugin": {
            "enabled": false
          },
          "es.upv.paella.frameControlPlugin": {
            "enabled": true,
            "showFullPreview": "auto"
          },
          "es.upv.paella.fullScreenButtonPlugin": {
            "enabled": true,
            "reloadOnFullscreen": {
              "enabled": true,
              "keepUserSelection": true
            }
          },
          "es.upv.paella.helpPlugin": {
            "enabled": true,
            "langs": [
              "en",
              "es"
            ]
          },
          "es.upv.paella.multipleQualitiesPlugin": {
            "enabled": true,
            "showWidthRes": true
          },
          "es.upv.paella.playbackRatePlugin": {
            "enabled": true,
            "availableRates": [
              0.75,
              1,
              1.25,
              1.5,
              2,
              2.5
            ]
          },
          "es.upv.paella.playPauseButtonPlugin": {
            "enabled": true
          },
          "es.upv.paella.searchPlugin": {
            "enabled": true,
            "sortType": "time",
            "colorSearch": false
          },
          "es.upv.paella.socialPlugin": {
            "enabled": true
          },
          "es.upv.paella.themeChooserPlugin": {
            "enabled": false
          },
          "es.upv.paella.viewModePlugin": {
            "enabled": true
          },
          "es.upv.paella.volumeRangePlugin": {
            "enabled": true,
            "showMasterVolume": true,
            "showSlaveVolume": true
          },
          "es.upv.paella.pipModePlugin": {
            "enabled": true
          },
          "es.upv.paella.ratePlugin": {
            "enabled": false
          },
          "es.upv.paella.audioLanguage": {
            "enabled": true
          },
          "es.upv.paella.videoZoomPlugin": {
            "enabled": true
          },
          "es.upv.paella.videoZoomToolbarPlugin": {
            "enabled": false,
            "targetStreamIndex": 0
          },
          "es.upv.paella.videoZoomTrack4kPlugin": {
            "enabled": true,
            "targetStreamIndex": 0,
            "autoModeByDefault": false
          },
          "es.upv.paella.airPlayPlugin": {
            "enabled": true
          },
          "es.upv.paella.liveStreamingIndicatorPlugin": {
            "enabled": true
          },
          "es.upv.paella.arrowSlidesNavigatorPlugin": {
            "enabled": true,
            "showArrowsIn": "slave"
          },
          "es.upv.paella.videoDataPlugin": {
            "enabled": false,
            "excludeLocations": [
              "paellaplayer.upv.es"
            ],
            "excludeParentLocations": [
              "localhost:8000"
            ]
          },
          "es.upv.paella.commentsPlugin": {
            "enabled": false
          },
          "es.upv.paella.test.tabBarExamplePlugin": {
            "enabled": false
          },
          "es.upv.paella.blackBoardPlugin": {
            "enabled": true
          },
          "es.upv.paella.breaksPlayerPlugin": {
            "enabled": true
          },
          "es.upv.paella.overlayCaptionsPlugin": {
            "enabled": true
          },
          "es.upv.paella.playButtonOnScreenPlugin": {
            "enabled": true
          },
          "es.upv.paella.test.videoLoadPlugin": {
            "enabled": false
          },
          "es.upv.paella.translecture.captionsPlugin": {
            "enabled": true
          },
          "es.upv.paella.trimmingPlayerPlugin": {
            "enabled": true
          },
          "es.upv.paella.zoomPlugin": {
            "enabled": false
          },
          "es.upv.paella.windowTitlePlugin": {
            "enabled": true
          },
          "es.upv.paella.track4kPlugin": {
            "enabled": true
          },
          "es.upv.paella.captions.DFXPParserPlugin": {
            "enabled": true
          },
          "es.teltek.paella.captions.WebVTTParserPlugin": {
            "enabled": true
          },
          "es.upv.paella.search.captionsSearchPlugin": {
            "enabled": true
          },
          "es.upv.paella.frameCaptionsSearchPlugin": {
            "enabled": true
          },
          "es.upv.paella.usertracking.elasticsearchSaverPlugin": {
            "enabled": false,
            "url": "http://my.elastic.server"
          },
          "es.upv.paella.usertracking.GoogleAnalyticsSaverPlugIn": {
            "enabled": false,
            "trackingID": "UA-XXXXXXXX-Y"
          },
          "es.upv.paella.usertracking.piwikSaverPlugIn": {
            "enabled": false,
            "tracker": "http://localhost/piwik/",
            "siteId": "1"
          },
          "org.opencast.usertracking.MatomoSaverPlugIn": {
            "enabled": false,
            "server": "https://matomo.ugent.be/",
            "site_id": 71,
            "heartbeat": 30,
            "client_id": "Opencast - Paella Player"
          },
          "es.teltek.paella.usertracking.xAPISaverPlugin": {
            "enabled": false,
            "endpoint": "http://localhost:8081/data/xAPI/",
            "auth": "auth_key"
          },
          "es.upv.paella.legalPlugin": {
            "enabled": true,
                "label": "Legal info",
                "position": "right",
            "legalUrl": "https://en.wikipedia.org/wiki/General_Data_Protection_Regulation"
          },
          "es.upv.paella.audioSelector": {
            "enabled": true
          },
          "es.upv.paella.opencast.descriptionPlugin": {
            "enabled": true
          },
          "es.upv.paella.defaultKeysPlugin": {
            "enabled":true
          },
          "es.upv.paella.opencast.downloadsPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.episodesFromSeries": {
            "enabled": true
          },
          "es.upv.paella.opencast.logIn": {
            "enabled": true
          },
          "es.upv.paella.opencast.searchPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.transcriptionTabBarPlugin": {
            "enabled": true
          },
          "es.upv.paella.opencast.userTrackingSaverPlugIn": {
            "enabled": true
          }
        }
      }
    }
  'org.opencastproject.userdirectory.ldap-{{ opencast.userdirectory.ldap.id }}.cfg': |
    #########
    ## Required configuration properties
    ######

    ## A unique identifier for this connection. It only has effect within Opencast.
    ## May be different as the <ID> used above, but this is not recommended for clarity
    ## IMPORTANT: This identifier must be the same as the one used in the security.xml
    ## file to get a reference to an 'authoritiesPopulator'
    org.opencastproject.userdirectory.ldap.id={{ opencast.userdirectory.ldap.id }}

    ## The URL to the LDAP server
    ## Example: ldap://ldap.berkeley.edu
    org.opencastproject.userdirectory.ldap.url={{ opencast.userdirectory.ldap.url }}

    ## The base path within LDAP to search for users
    ## Example: ou=people,dc=berkeley,dc=edu
    org.opencastproject.userdirectory.ldap.searchbase={{ opencast.userdirectory.ldap.searchbase }}

    ## The search filter to use for identifying users by ID
    ## Example: (uid={0})
    org.opencastproject.userdirectory.ldap.searchfilter={{ opencast.userdirectory.ldap.searchfilter }}

    ## The comma-separated list of attributes that will be translated into roles.
    ## Note that the attributes may be converted to uppercase and prefixed depending on the configuration below.
    ## Please refer to the documentation of the "roleprefix" property.
    ## Example: berkeleyEduAffiliations,departmentNumber
    org.opencastproject.userdirectory.ldap.roleattributes={{ opencast.userdirectory.ldap.roleattributes}}


    #########
    ## Optional configuration properties
    ######

    ## The user and password used for LDAP authentication.
    ## If left commented, the LDAP provider will use an anonymous bind.
    org.opencastproject.userdirectory.ldap.userDn={{ opencast.userdirectory.ldap.userdn }}
    org.opencastproject.userdirectory.ldap.password={{ opencast.userdirectory.ldap.password }}

    ## The maximum number of users to cache
    ## Default: 1000
    #org.opencastproject.userdirectory.ldap.cache.size=1000

    ## The maximum number of minutes to cache a user
    ## Default: 5
    #org.opencastproject.userdirectory.ldap.cache.expiration=5

    ## The organization for this provider
    ## Default: First available organization
    #org.opencastproject.userdirectory.ldap.org=mh_default_org

    ## A prefix to be added to the roles read by this provider
    ## The prefix is not added to a role if any of the following conditions is met:
    ## - The role starts with any of the prefixes defined in the parameter 'exclude.prefixes'
    ## - The role was not actually read from the provider, but defined in the 'extra.roles' list below
    ## Default: ROLE_
    #org.opencastproject.userdirectory.ldap.roleprefix=ROLE_

    ## A comma-separated list of prefixes. When the roles read from LDAP start with any of these, then the prefix defined
    ## above is not prepended to the role.
    ## Please note that if the "uppercase" parameter was provided, these prefixes are converted accordingly
    ## Default: <empty>
    #org.opencastproject.userdirectory.ldap.exclude.prefixes=

    ## Whether or not the role names should be converted to uppercase. It defaults to "true".
    ## Please note that this setting affects the prefix defined above.
    ## Default: true
    #org.opencastproject.userdirectory.ldap.uppercase=true

    ## A comma-separated list of extra roles to apply to all the users authenticated with this LDAP instance
    ## The roles in this list are converted to uppercase if the corresponding parameter is set. However, the 'roleprefix'
    ## setting does not affect them -i.e. they will not be further modified even if 'roleprefix' is set.
    ## Defaut: <empty>
    #org.opencastproject.userdirectory.ldap.extra.roles=
  mh_default_org.xml: |
    <beans xmlns="http://www.springframework.org/schema/beans" xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:osgi="http://www.springframework.org/schema/osgi"
      xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/osgi
           http://www.springframework.org/schema/osgi/spring-osgi.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.1.xsd">

      <!-- ######################################## -->
      <!-- # Open and unsecured url patterns      # -->
      <!-- ######################################## -->

      <sec:http pattern="/admin/img/**" security="none" />
      <sec:http pattern="/favicon.ico" security="none" />
      <sec:http pattern="/img/**" security="none" />
      <sec:http pattern="/js/**" security="none" />
      <sec:http pattern="/lib/**" security="none" />
      <sec:http pattern="/admin-ng/fonts/**" security="none" />
      <sec:http pattern="/admin-ng/scripts/**" security="none" />
      <sec:http pattern="/admin-ng/styles/**" security="none" />
      <sec:http pattern="/play/*" security="none" />

      <sec:http create-session="ifRequired" servlet-api-provision="true" realm="Opencast"
        entry-point-ref="opencastEntryPoint">

        <!-- ################ -->
        <!-- # URL SECURITY # -->
        <!-- ################ -->

        <!-- Allow anonymous access to the login form -->
        <sec:intercept-url pattern="/admin-ng/login.html" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/sysinfo/bundles/version" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Allow anonymous access to resources from runtime info ui -->
        <sec:intercept-url pattern="/img/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/js/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/docs.*" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/rest_docs.*" access="ROLE_ANONYMOUS" />

        <!-- Allow anonymous access to the player redirect -->
        <sec:intercept-url pattern="/play/*" access="ROLE_ANONYMOUS" />

        <!-- Protect admin UI facade -->
        <sec:intercept-url pattern="/workflow/definitions.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/acl/acls.json" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/acl/*" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/acl-manager/acl/*" method="GET" access="ROLE_ADMIN, ROLE_UI_ACLS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/agents.json" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_VIEW, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/*" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_DETAILS_CAPABILITIES_VIEW, ROLE_UI_LOCATIONS_DETAILS_CONFIGURATION_VIEW, ROLE_UI_LOCATIONS_DETAILS_GENERAL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/assets.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/attachment/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/catalog/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/media/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/asset/publication/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/catalogAdapters" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/events.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/workflowProperties" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE, ROLE_UI_TASKS_CREATE, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/new/metadata" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/new/processing" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/attachments.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ATTACHMENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/comments" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/publications.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_PUBLICATIONS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/hasActiveTransaction" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/hasSnapshots.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/media.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/media/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/metadata.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/scheduling.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/operations.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/operations/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/errors.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/errors/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_VIEW"/>
        <sec:intercept-url pattern="/admin-ng/event/*/access.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ACL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/groups/groups.json" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/job/jobs.json" method="GET" access="ROLE_ADMIN, ROLE_UI_JOBS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/series.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/new/metadata" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/new/themes" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/access.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_ACL_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/*/metadata.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_VIEW" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/server/servers.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/services/services.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERVICES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tasks/processing.json" method="GET" access="ROLE_ADMIN, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/themes/themes.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/themes/*/usage.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/themes/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_DETAILS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*/editor.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*/thumbnail.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/tools/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_VIEW" />
        <sec:intercept-url pattern="/admin-ng/users/users.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/users/*.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/events/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/series/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_SERIES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/themes/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/recordings/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/users/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_USERS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/groups/filters.json" method="GET" access="ROLE_ADMIN, ROLE_UI_GROUPS_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/components.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/providers.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/resources/THEMES.json" method="GET" access="ROLE_ADMIN, ROLE_UI_THEMES_VIEW" />
        <sec:intercept-url pattern="/admin-ng/resources/*.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/statistics/*.json" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/statistics/export.csv" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/assets/assets/**" method="GET" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_VIEW" />

        <sec:intercept-url pattern="/admin-ng/acl/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_ACLS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_METADATA_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/scheduling" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/stop" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/retry" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*/action/none" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_EDIT"/>
        <sec:intercept-url pattern="/admin-ng/event/bulk/update" method="PUT" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_GROUPS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_METADATA_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme" method="PUT" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/themes/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/users/*" method="PUT" access="ROLE_ADMIN, ROLE_UI_USERS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature/*" method="PUT" access="ROLE_ADMIN, ROLE_ADMIN_UI" />

        <sec:intercept-url pattern="/services/maintenance" method="POST" access="ROLE_ADMIN, ROLE_UI_SERVERS_MAINTENANCE_EDIT" />
        <sec:intercept-url pattern="/services/sanitize" method="POST" access="ROLE_ADMIN, ROLE_UI_SERVICES_STATUS_EDIT" />
        <sec:intercept-url pattern="/staticfiles" method="POST" access="ROLE_ADMIN, ROLE_UI_THEMES_CREATE, ROLE_UI_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/acl" method="POST" access="ROLE_ADMIN, ROLE_UI_ACLS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/bulk/conflicts" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/deleteEvents" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/new" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/new/conflicts" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/scheduling.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_SCHEDULING_VIEW" />
        <sec:intercept-url pattern="/admin-ng/event/*/access" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ACL_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/assets" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_ASSETS_EDIT" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/reply" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/groups" method="POST" access="ROLE_ADMIN, ROLE_UI_GROUPS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/index/*" method="POST" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/admin-ng/series/deleteSeries" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/series/new" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_CREATE" />
        <sec:intercept-url pattern="/admin-ng/series/*/access" method="POST" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_ACL_EDIT" />
        <sec:intercept-url pattern="/admin-ng/statistics/data.json" method="POST" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/tasks/new" method="POST" access="ROLE_ADMIN, ROLE_UI_TASKS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/themes" method="POST" access="ROLE_ADMIN, ROLE_UI_THEMES_CREATE" />
        <sec:intercept-url pattern="/admin-ng/tools/*/editor.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_EDIT" />
        <sec:intercept-url pattern="/admin-ng/tools/*/thumbnail.json" method="POST" access="ROLE_ADMIN, ROLE_UI_EVENTS_EDITOR_EDIT" />
        <sec:intercept-url pattern="/admin-ng/users" method="POST" access="ROLE_ADMIN, ROLE_UI_USERS_CREATE" />
        <sec:intercept-url pattern="/admin-ng/user-settings/signature" method="POST" access="ROLE_ADMIN, ROLE_ADMIN_UI" />

        <sec:intercept-url pattern="/admin-ng/acl/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_ACLS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/capture-agents/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_LOCATIONS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/comment/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_COMMENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*/workflows/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DETAILS_WORKFLOWS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/event/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_EVENTS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/groups/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_GROUPS_DELETE" />
        <sec:intercept-url pattern="/admin-ng/series/*/theme" method="DELETE" access="ROLE_ADMIN, ROLE_UI_SERIES_DETAILS_THEMES_EDIT" />
        <sec:intercept-url pattern="/admin-ng/series/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_SERIES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/themes/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_THEMES_DELETE" />
        <sec:intercept-url pattern="/admin-ng/users/*" method="DELETE" access="ROLE_ADMIN, ROLE_UI_USERS_DELETE" />

        <!-- Securing the URLs for the external API interface -->
        <!-- External API GET Endpoints -->
        <sec:intercept-url pattern="/api" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/agents" method="GET" access="ROLE_ADMIN, ROLE_API_CAPTURE_AGENTS_VIEW"/>
        <sec:intercept-url pattern="/api/agents/*" method="GET" access="ROLE_ADMIN, ROLE_API_CAPTURE_AGENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/acl" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/media" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/media/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_MEDIA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/publications" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_PUBLICATIONS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/publications/*" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_PUBLICATIONS_VIEW"/>
        <sec:intercept-url pattern="/api/events/*/scheduling" method="GET" access="ROLE_ADMIN, ROLE_API_EVENTS_SCHEDULING_VIEW"/>
        <sec:intercept-url pattern="/api/groups" method="GET" access="ROLE_ADMIN, ROLE_API_GROUPS_VIEW"/>
        <sec:intercept-url pattern="/api/groups/*" method="GET" access="ROLE_ADMIN, ROLE_API_GROUPS_VIEW"/>
        <sec:intercept-url pattern="/api/info/*" method="GET" access="ROLE_ADMIN, ROLE_API" />
        <sec:intercept-url pattern="/api/info/me/*" method="GET" access="ROLE_ADMIN, ROLE_API" />
        <sec:intercept-url pattern="/api/series" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_VIEW"/>
        <sec:intercept-url pattern="/api/series/*" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/acl" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_ACL_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_VIEW"/>
        <sec:intercept-url pattern="/api/series/*/properties" method="GET" access="ROLE_ADMIN, ROLE_API_SERIES_PROPERTIES_VIEW"/>
        <sec:intercept-url pattern="/api/statistics/providers" method="GET" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/statistics/providers/*" method="GET" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/version" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/version/*" method="GET" access="ROLE_ADMIN, ROLE_API"/>
        <sec:intercept-url pattern="/api/workflows" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_VIEW"/>
        <sec:intercept-url pattern="/api/workflows/*" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_VIEW"/>
        <sec:intercept-url pattern="/api/workflow-definitions" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_DEFINITION_VIEW"/>
        <sec:intercept-url pattern="/api/workflow-definitions/*" method="GET" access="ROLE_ADMIN, ROLE_API_WORKFLOW_DEFINITION_VIEW"/>
        <!-- External API PUT Endpoints -->
        <sec:intercept-url pattern="/api/events/*" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/acl" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/scheduling" method="PUT" access="ROLE_ADMIN, ROLE_API_EVENTS_SCHEDULING_EDIT"/>
        <sec:intercept-url pattern="/api/groups/*" method="PUT" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/series/*" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/acl" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_EDIT"/>
        <sec:intercept-url pattern="/api/series/*/properties" method="PUT" access="ROLE_ADMIN, ROLE_API_SERIES_PROPERTIES_EDIT"/>
        <sec:intercept-url pattern="/api/workflows/*" method="PUT" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_EDIT"/>
        <!-- External API POST Endpoints -->
        <sec:intercept-url pattern="/api/events" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_CREATE"/>
        <sec:intercept-url pattern="/api/events/*" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_EDIT"/>
        <sec:intercept-url pattern="/api/events/*/acl/*" method="POST" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_EDIT"/>
        <sec:intercept-url pattern="/api/groups" method="POST" access="ROLE_ADMIN, ROLE_API_GROUPS_CREATE"/>
        <sec:intercept-url pattern="/api/groups/*/members/*" method="POST" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/clearIndex" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/recreateIndex" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/recreateIndex/*" method="POST" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/api/series" method="POST" access="ROLE_ADMIN, ROLE_API_SERIES_CREATE"/>
        <sec:intercept-url pattern="/api/security/sign" method="POST" access="ROLE_ADMIN, ROLE_API_SECURITY_EDIT"/>
        <sec:intercept-url pattern="/api/statistics/data/query" method="POST" access="ROLE_ADMIN, ROLE_API_STATISTICS_VIEW"/>
        <sec:intercept-url pattern="/api/workflows" method="POST" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_CREATE"/>
        <!-- External API DELETE Endpoints -->
        <sec:intercept-url pattern="/api/events/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/acl/*/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_ACL_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/metadata" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/events/*/metadata/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_EVENTS_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/groups/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_GROUPS_DELETE"/>
        <sec:intercept-url pattern="/api/groups/*/members/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_GROUPS_EDIT"/>
        <sec:intercept-url pattern="/api/series/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_DELETE"/>
        <sec:intercept-url pattern="/api/series/*/metadata" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/series/*/metadata/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_SERIES_METADATA_DELETE"/>
        <sec:intercept-url pattern="/api/workflows/*" method="DELETE" access="ROLE_ADMIN, ROLE_API_WORKFLOW_INSTANCE_DELETE"/>

        <!-- Enable anonymous access to the admin ui -->
        <sec:intercept-url pattern="/admin-ng/fonts/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/img/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/lib/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/modules/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/public/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/scripts/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/shared/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/admin-ng/styles/**" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the /info/** resource -->
        <sec:intercept-url pattern="/info/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/i18n/languages.json" method="GET" access="ROLE_ANONYMOUS" />

        <!-- anonymous access to user interface configuration -->
        <sec:intercept-url pattern="/ui/config/**" access="ROLE_ANONYMOUS" />

        <!-- Paella player -->
        <sec:intercept-url pattern="/paella/ui/auth.html" access="ROLE_USER" />
        <sec:intercept-url pattern="/paella/ui/**" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the engage player and the GET endpoints it requires -->
        <sec:intercept-url pattern="/engage/ui/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/engage/**" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/engage-player/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/search/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/usertracking/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/usertracking/**" method="PUT" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/static/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/export/**" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Enable admin access to Opencast Studio -->
        <sec:intercept-url pattern="/studio/**" access="ROLE_ADMIN, ROLE_STUDIO, ROLE_UGENTEMPLOYEE" />

        <!-- Enable anonymous access to the annotation and the series endpoints -->
        <sec:intercept-url pattern="/series/**" method="GET" access="ROLE_ANONYMOUS, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/annotation/**" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/annotation/**" method="PUT" access="ROLE_ANONYMOUS" />

        <!-- Enable anonymous access to the OAI-PMH repository              -->
        <!-- The OAI-PMH specification demands boths GET and POST requests  -->
        <!-- Please make sure that the path configured here matches         -->
        <!-- the path configured for the repository servlet.                -->
        <sec:intercept-url pattern="/oaipmh/**" method="GET" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/oaipmh/**" method="POST" access="ROLE_ADMIN"/>

        <!-- Enable anonymous access to the rss and atom feeds -->
        <sec:intercept-url pattern="/feeds/**" method="GET" access="ROLE_ANONYMOUS" />

        <!-- Secure the system management URLs for admins only -->
        <sec:intercept-url pattern="/services/available.*" method="GET" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/services/**" access="ROLE_ADMIN"/>
        <sec:intercept-url pattern="/signing/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/system/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/config/**" access="ROLE_ADMIN" />

        <!-- Enable capture agent updates and ingest -->
        <sec:intercept-url pattern="/capture-admin/**" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/recordings/**" method="GET" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT" />
        <sec:intercept-url pattern="/ingest/**" access="ROLE_ADMIN, ROLE_CAPTURE_AGENT, ROLE_STUDIO, ROLE_UGENTEMPLOYEE" />

        <!-- Secure the user management URLs for admins only -->
        <sec:intercept-url pattern="/users/**" access="ROLE_ADMIN" />
        <sec:intercept-url pattern="/admin/users.html" access="ROLE_ADMIN" />

        <!-- Enable 2-legged OAuth access ("signed fetch") to the LTI launch servlet -->
        <sec:intercept-url pattern="/lti" access="ROLE_OAUTH_USER" />

        <!-- Enable access to the LTI tools -->
        <sec:intercept-url pattern="/ltitools/**" access="ROLE_OAUTH_USER" />

        <sec:intercept-url pattern="/transcripts/watson/results*" method="GET" access="ROLE_ANONYMOUS" />
        <sec:intercept-url pattern="/transcripts/watson/results*" method="POST" access="ROLE_ANONYMOUS" />

        <!-- Everything else is for the admin users -->
        <sec:intercept-url pattern="/admin-ng" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/" method="GET" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/admin-ng/index.html" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/index.html" access="ROLE_ADMIN, ROLE_ADMIN_UI" />
        <sec:intercept-url pattern="/**" access="ROLE_ADMIN" />

        <!-- ############################# -->
        <!-- # LOGIN / LOGOUT MECHANISMS # -->
        <!-- ############################# -->

        <!-- Uncomment to enable x509 client certificates for identifying clients -->
        <!-- sec:x509 subject-principal-regex="CN=(.*?)," user-service-ref="userDetailsService" / -->

        <!-- Enable and configure the failure URL for form-based logins -->
        <!-- <sec:form-login authentication-failure-url="/admin-ng/login.html?error" authentication-success-handler-ref="authSuccessHandler" /> -->

        <!-- Authentication filter chain -->
        <!-- CAS auth is used for authentication via browsers -->
        <sec:custom-filter position="FORM_LOGIN_FILTER" ref="casFilter" />
        <sec:custom-filter position="BASIC_AUTH_FILTER" ref="authenticationFilters" />

        <sec:custom-filter ref="asyncTimeoutRedirectFilter" after="EXCEPTION_TRANSLATION_FILTER"/>
        <!-- Opencast is shipping its own implementation of the anonymous filter -->
        <sec:custom-filter ref="anonymousFilter" position="ANONYMOUS_FILTER" />

        <!-- Enables "remember me" functionality -->
        <sec:remember-me key="opencast" user-service-ref="userDetailsService" />
        <!-- Set the request cache -->
        <sec:request-cache ref="requestCache" />
        <!-- If any URLs are to be exposed to anonymous users, the "sec:anonymous" filter must be present -->
        <sec:anonymous enabled="false" />
        <!-- Enables CAS Single Sign Out -->
        <sec:logout logout-success-url="/cas-logout.jsp"/>
        <sec:custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER"/>
        <sec:custom-filter ref="singleLogoutFilter" before="FORM_LOGIN_FILTER"/>
      </sec:http>
      <!-- ############################# -->
      <!-- # Authentication Filters    # -->
      <!-- ############################# -->
      <bean id="authenticationFilters" class="org.springframework.web.filter.CompositeFilter">
        <property name="filters">
          <list>
            <!-- Digest auth is used by capture agents and is used to enable transparent clustering of services -->
            <!-- ATTENTION! Do not deactivate the digest filter, otherwise the distributed setup would not work -->
            <ref bean="digestFilter" />
            <!-- Basic authentication  -->
            <ref bean="basicAuthenticationFilter" />
            <!-- 2-legged OAuth is used by trusted 3rd party applications, including LTI. -->
            <!-- Uncomment the line below to support LTI or other OAuth clients.          -->
            <ref bean="oauthProtectedResourceFilter" />
          </list>
        </property>
      </bean>

      <!-- ########################################### -->
      <!-- # Custom ajax timeout Filter Definition   # -->
      <!-- ########################################### -->
      <bean id="asyncTimeoutRedirectFilter" class="org.opencastproject.kernel.security.AsyncTimeoutRedirectFilter" />

      <!-- ######################################## -->
      <!-- # Custom Anonymous Filter Definition   # -->
      <!-- ######################################## -->
      <bean id="anonymousFilter" class="org.opencastproject.kernel.security.TrustedAnonymousAuthenticationFilter">
        <property name="userAttribute" ref="anonymousUserAttributes" />
        <property name="key" value="anonymousKey" />
      </bean>

      <bean id="anonymousUserAttributes" class="org.springframework.security.core.userdetails.memory.UserAttribute">
        <property name="authoritiesAsString" value="ROLE_ANONYMOUS"/>
        <property name="password" value="empty"/>
      </bean>

      <!-- ######################################## -->
      <!-- # Authentication Entry and Exit Points # -->
      <!-- ######################################## -->

      <!-- Differentiates between "normal" user requests and those requesting digest auth -->
      <bean id="opencastEntryPoint" class="org.opencastproject.kernel.security.DelegatingAuthenticationEntryPoint">
        <property name="userEntryPoint" ref="casEntryPoint" />
        <property name="digestAuthenticationEntryPoint" ref="digestEntryPoint" />
      </bean>

      <!-- Returns a 401 request for authentication via digest auth -->
      <bean id="digestEntryPoint" class="org.springframework.security.web.authentication.www.DigestAuthenticationEntryPoint">
        <property name="realmName" value="Opencast" />
        <property name="key" value="opencast" />
        <property name="nonceValiditySeconds" value="300" />
      </bean>

      <bean id="basicEntryPoint" class="org.springframework.security.web.authentication.www.BasicAuthenticationEntryPoint">
        <property name="realmName" value="Opencast"/>
      </bean>

      <bean id="authSuccessHandler" class="org.opencastproject.kernel.security.AuthenticationSuccessHandler">
        <property name="securityService" ref="securityService" />
        <property name="welcomePages">
          <map>
            <entry key="ROLE_ADMIN" value="/admin-ng/index.html" />
            <entry key="ROLE_ADMIN_UI" value="/admin-ng/index.html" />
            <entry key="*" value="/engage/ui/index.html" />
            <!-- Any role not listed explicitly will redirect here -->
          </map>
        </property>
      </bean>

      <!-- ################# -->
      <!-- # Digest Filter # -->
      <!-- ################# -->

      <!-- Handles the details of the digest authentication dance -->
      <bean id="digestFilter" class="org.springframework.security.web.authentication.www.DigestAuthenticationFilter">
        <!--  Use only the in-memory users, as these have passwords that are not hashed -->
        <property name="userDetailsService" ref="userDetailsService" />
        <property name="authenticationEntryPoint" ref="digestEntryPoint" />
        <property name="createAuthenticatedToken" value="true" />
        <property name="userCache">
          <bean class="org.springframework.security.core.userdetails.cache.NullUserCache" />
        </property>
      </bean>

      <!-- ############################### -->
      <!-- # Basic Authentication Filter # -->
      <!-- ############################### -->

      <!-- Handles the details of the basic authentication dance -->
      <bean id="basicAuthenticationFilter" class="org.springframework.security.web.authentication.www.BasicAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationEntryPoint" ref="basicEntryPoint"/>
      </bean>

      <!-- ####################### -->
      <!-- # OAuth (LTI) Support # -->
      <!-- ####################### -->
      <bean name="oauthProtectedResourceFilter" class="org.opencastproject.kernel.security.LtiProcessingFilter">
        <property name="consumerDetailsService" ref="oAuthConsumerDetailsService" />
        <property name="tokenServices">
          <bean class="org.springframework.security.oauth.provider.token.InMemoryProviderTokenServices" />
        </property>
        <property name="nonceServices">
          <bean class="org.springframework.security.oauth.provider.nonce.InMemoryNonceServices" />
        </property>
        <property name="authHandler" ref="ltiLaunchAuthenticationHandler" />
      </bean>
      <!-- ############### -->
      <!-- # CAS Support # -->
      <!-- ############### -->
      <bean id="casFilter"
        class="org.springframework.security.cas.web.CasAuthenticationFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="authSuccessHandler" />
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="authenticationDetailsSource">
          <bean class="org.springframework.security.cas.web.authentication.ServiceAuthenticationDetailsSource"/>
        </property>
      </bean>
      <bean id="casEntryPoint"
        class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
        <property name="loginUrl" value="{{ opencast.cas_filter.login_url }}"/>
        <property name="serviceProperties" ref="serviceProperties"/>
      </bean>
      <bean id="serviceProperties"
        class="org.springframework.security.cas.ServiceProperties">
        <property name="service" value="{{ opencast.cas_filter.service }}"/>
        <property name="sendRenew" value="false"/>
      </bean>
      <bean id="casAuthenticationProvider"
        class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
        <property name="serviceProperties" ref="serviceProperties" />
        <property name="authenticationUserDetailsService">
          <bean class="org.springframework.security.core.userdetails.UserDetailsByNameServiceWrapper">
            <constructor-arg ref="userDetailsService" />
          </bean>
        </property>
        <property name="ticketValidator">
          <bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
            <constructor-arg index="0" value="{{ opencast.cas_filter.ticket_validator }}" />
          </bean>
        </property>
        <property name="key" value="opencastprd"/>
      </bean>
      <!-- This filter handles a Single Logout Request from the CAS Server -->
      <bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter"/>
      <!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
      <bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
        <constructor-arg value="{{ opencast.cas_filter.logout_url }}"/>
        <constructor-arg>
          <bean class= "org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler"/>
        </constructor-arg>
        <property name="filterProcessesUrl" value="{{ opencast.cas_filter.logout_filter_url }}"/>
      </bean>
      <!-- #################### -->
      <!-- # OSGI Integration # -->
      <!-- #################### -->
      <!-- Obtain services from the OSGI service registry -->
      <osgi:reference id="userDetailsService" cardinality="1..1"
                      interface="org.springframework.security.core.userdetails.UserDetailsService" />
      <osgi:reference id="securityService" cardinality="1..1"
                      interface="org.opencastproject.security.api.SecurityService" />
      <!-- Uncomment to enable external users e.g. used together shibboleth -->
      <!-- <osgi:reference id="userReferenceProvider" cardinality="1..1"
                      interface="org.opencastproject.userdirectory.api.UserReferenceProvider"  /> -->
      <osgi:reference id="userDirectoryService" cardinality="1..1"
                      interface="org.opencastproject.security.api.UserDirectoryService" />
      <osgi:reference id="oAuthConsumerDetailsService" cardinality="1..1"
                      interface="org.springframework.security.oauth.provider.ConsumerDetailsService" />
      <osgi:reference id="ltiLaunchAuthenticationHandler" cardinality="1..1"
                      interface="org.springframework.security.oauth.provider.OAuthAuthenticationHandler" />
      <!-- ############################# -->
      <!-- # Spring Security Internals # -->
      <!-- ############################# -->
      <!-- The JPA user directory stores md5 hashed, salted passwords, so we must use a username-salted md5 password encoder. -->
      <sec:authentication-manager alias="authenticationManager">
        <sec:authentication-provider ref="casAuthenticationProvider" />
        <sec:authentication-provider user-service-ref="userDetailsService">
          <sec:password-encoder hash="md5">
            <sec:salt-source user-property="username" />
          </sec:password-encoder>
        </sec:authentication-provider>
      </sec:authentication-manager>
      <!-- Do not use a request cache -->
      <bean id="requestCache" class="org.springframework.security.web.savedrequest.NullRequestCache" />
      <!-- Uncomment to enable logging interceptors -->
      <!-- bean class="org.springframework.security.access.event.LoggerListener" / -->
      <!-- bean class="org.springframework.security.authentication.event.LoggerListener" / -->
    </beans>
  org.apache.karaf.features.cfg: |
    ################################################################################
    #
    #    Licensed to the Apache Software Foundation (ASF) under one or more
    #    contributor license agreements.  See the NOTICE file distributed with
    #    this work for additional information regarding copyright ownership.
    #    The ASF licenses this file to You under the Apache License, Version 2.0
    #    (the "License"); you may not use this file except in compliance with
    #    the License.  You may obtain a copy of the License at
    #
    #       http://www.apache.org/licenses/LICENSE-2.0
    #
    #    Unless required by applicable law or agreed to in writing, software
    #    distributed under the License is distributed on an "AS IS" BASIS,
    #    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    #    See the License for the specific language governing permissions and
    #    limitations under the License.
    #
    ################################################################################

    #
    # Comma separated list of features repositories to register by default
    #
    featuresRepositories = \
        mvn:org.apache.karaf.features/enterprise/4.2.2/xml/features, \
        mvn:org.apache.cxf.karaf/apache-cxf/3.2.6/xml/features, \
        mvn:org.opencastproject.assemblies/opencast-karaf-features/9.3/xml/features, \
        mvn:org.apache.karaf.features/standard/4.2.2/xml/features, \
        mvn:org.apache.karaf.features/framework/4.2.2/xml/features

    #
    # Comma separated list of features to install at startup
    #
    featuresBoot = \
        (wrap), \
        cxf-http-jetty/3.3.3, \
        package/4.2.9, \
        scr/4.2.9, \
        cxf-commands/3.3.3, \
        log/4.2.9, \
        cxf-jaxrs/3.3.3, \
        aries-blueprint/4.2.9, \
        framework/4.2.9, \
        system/4.2.9, \
        feature/4.2.9, \
        shell/4.2.9, \
        eclipselink/2.7.7, \
        service/4.2.9, \
        jndi/4.2.9, \
        http/4.2.9, \
        jpa/2.7.2, \
        deployer/4.2.9, \
        http-whiteboard/4.2.9, \
        opencast-admin/9.3, \
        bundle/4.2.9, \
        config/4.2.9, \
        transaction/2.0.0 \
        opencast-security-cas

    #
    # Resource repositories (OBR) that the features resolver can use
    # to resolve requirements/capabilities
    #
    # The format of the resourceRepositories is
    # resourceRepositories=[xml:url|json:url],...
    # for Instance:
    #
    #resourceRepositories=xml:http://host/path/to/index.xml
    # or
    #resourceRepositories=json:http://host/path/to/index.json
    #

    #
    # Defines if the boot features are started in asynchronous mode (in a dedicated thread)
    #
    featuresBootAsynchronous=false

    #
    # Service requirements enforcement
    #
    # By default, the feature resolver checks the service requirements/capabilities of
    # bundles for new features (xml schema >= 1.3.0) in order to automatically installs
    # the required bundles.
    # The following flag can have those values:
    #   - disable: service requirements are completely ignored
    #   - default: service requirements are ignored for old features
    #   - enforce: service requirements are always verified
    #
    #serviceRequirements=default

    #
    # Store cfg file for config element in feature
    #
    #configCfgStore=true

    #
    # Configuration of features processing mechanism (overrides, blacklisting, modification of features)
    # XML file defines instructions related to features processing
    # versions.properties may declare properties to resolve placeholders in XML file
    # both files are relative to ${karaf.etc}
    #
    #featureProcessing=org.apache.karaf.features.xml
    #featureProcessingVersions=versions.properties

